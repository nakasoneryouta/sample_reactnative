{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nakasoneryouta/Desktop/sample_reactnative/src/components/atoms/EditorTab/EditorTab.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { SceneMap, TabBar, TabView } from 'react-native-tab-view';\n\nvar component = function component(_ref) {\n  var tabs = _ref.tabs;\n  var initialLayout = {\n    width: Dimensions.get('window').width\n  };\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState(tabs.map(function (item) {\n    return {\n      key: item.key,\n      title: item.title\n    };\n  })),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      routes = _React$useState4[0];\n\n  var renderScene = SceneMap(tabs.reduce(function (obj, item) {\n    return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, item.key, item.scene));\n  }, {}));\n  return React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: initialLayout,\n    swipeEnabled: false,\n    renderTabBar: function renderTabBar(props) {\n      return React.createElement(TabBar, _extends({}, props, {\n        activeColor: 'red',\n        indicatorStyle: styles.indicatorStyle,\n        style: styles.normalStyle,\n        labelStyle: styles.labelStyle,\n        renderLabel: function renderLabel(_ref2) {\n          var route = _ref2.route,\n              focused = _ref2.focused;\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 6\n            }\n          }, React.createElement(Text, {\n            style: [styles.labelStyle, focused ? styles.activeTabTextColor : styles.tabTextColor],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 6\n            }\n          }, route.title));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  indicatorStyle: {\n    backgroundColor: 'white'\n  },\n  normalStyle: {\n    backgroundColor: '#212223'\n  },\n  labelStyle: {\n    fontWeight: 'bold',\n    fontSize: 17\n  },\n  activeTabTextColor: {\n    color: 'white'\n  },\n  tabTextColor: {\n    color: \"#9FA2A9\"\n  }\n});\nexport default component;","map":{"version":3,"sources":["/Users/nakasoneryouta/Desktop/sample_reactnative/src/components/atoms/EditorTab/EditorTab.tsx"],"names":["React","SceneMap","TabBar","TabView","component","tabs","initialLayout","width","Dimensions","get","useState","index","setIndex","map","item","key","title","routes","renderScene","reduce","obj","scene","props","styles","indicatorStyle","normalStyle","labelStyle","route","focused","activeTabTextColor","tabTextColor","StyleSheet","create","backgroundColor","fontWeight","fontSize","color"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,QAA0C,uBAA1C;;AAQA,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,OAAa;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAG/C,MAAMC,aAAa,GAAG;AAAEC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AAAlC,GAAtB;;AAH+C,wBAKrBP,KAAK,CAACU,QAAN,CAAe,CAAf,CALqB;AAAA;AAAA,MAKxCC,KALwC;AAAA,MAKjCC,QALiC;;AAAA,yBAO9BZ,KAAK,CAACU,QAAN,CAChBL,IAAI,CAACQ,GAAL,CAAS,UAAAC,IAAI,EAAI;AAChB,WAAO;AACLC,MAAAA,GAAG,EAAED,IAAI,CAACC,GADL;AAELC,MAAAA,KAAK,EAAEF,IAAI,CAACE;AAFP,KAAP;AAIA,GALD,CADgB,CAP8B;AAAA;AAAA,MAOxCC,MAPwC;;AAiB/C,MAAMC,WAAW,GAAGjB,QAAQ,CAC3BI,IAAI,CAACc,MAAL,CAAY,UAACC,GAAD,EAAMN,IAAN;AAAA,2CAAoBM,GAApB,2BAA0BN,IAAI,CAACC,GAA/B,EAAqCD,IAAI,CAACO,KAA1C;AAAA,GAAZ,EAA+D,EAA/D,CAD2B,CAA5B;AAIA,SACC,oBAAC,OAAD;AACC,IAAA,eAAe,EAAE;AAAEV,MAAAA,KAAK,EAALA,KAAF;AAASM,MAAAA,MAAM,EAANA;AAAT,KADlB;AAEC,IAAA,WAAW,EAAEC,WAFd;AAGC,IAAA,aAAa,EAAEN,QAHhB;AAIC,IAAA,aAAa,EAAEN,aAJhB;AAKC,IAAA,YAAY,EAAI,KALjB;AAMC,IAAA,YAAY,EAAE,sBAAAgB,KAAK;AAAA,aAClB,oBAAC,MAAD,eACMA,KADN;AAEE,QAAA,WAAW,EAAI,KAFjB;AAGE,QAAA,cAAc,EAAEC,MAAM,CAACC,cAHzB;AAIE,QAAA,KAAK,EAAED,MAAM,CAACE,WAJhB;AAKE,QAAA,UAAU,EAAIF,MAAM,CAACG,UALvB;AAME,QAAA,WAAW,EAAE,4BAAwB;AAAA,cAArBC,KAAqB,SAArBA,KAAqB;AAAA,cAAdC,OAAc,SAAdA,OAAc;AAAC,iBACvC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE,CAACL,MAAM,CAACG,UAAR,EAAoBE,OAAO,GAAGL,MAAM,CAACM,kBAAV,GAA+BN,MAAM,CAACO,YAAjE,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGGH,KAAK,CAACX,KAHT,CADA,CADuC;AAQpC,SAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADkB;AAAA,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AA2BA,CAhDD;;AAkDA,IAAMO,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCR,EAAAA,cAAc,EAAE;AACfS,IAAAA,eAAe,EAAE;AADF,GADgB;AAIhCR,EAAAA,WAAW,EAAC;AACXQ,IAAAA,eAAe,EAAE;AADN,GAJoB;AAOhCP,EAAAA,UAAU,EAAC;AACVQ,IAAAA,UAAU,EAAE,MADF;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GAPqB;AAWhCN,EAAAA,kBAAkB,EAAC;AAClBO,IAAAA,KAAK,EAAE;AADW,GAXa;AAchCN,EAAAA,YAAY,EAAC;AACZM,IAAAA,KAAK,EAAE;AADK;AAdmB,CAAlB,CAAf;AAmBA,eAAehC,SAAf","sourcesContent":["import React from 'react';\nimport { View, Dimensions ,StyleSheet, Text} from 'react-native';\nimport { SceneMap, TabBar, TabView } from 'react-native-tab-view';\n\n\ntype Props = {\n  tabs: any[];\n}\n\n\nconst component: React.FC<Props> = ({ tabs }) =>{\n\n\n\tconst initialLayout = { width: Dimensions.get('window').width };\n\n\tconst [index, setIndex] = React.useState(0);\n\n\tconst [routes] = React.useState(\n\t\ttabs.map(item => {\n\t\t\treturn {\n\t\t\t  key: item.key,\n\t\t\t  title: item.title,\n\t\t\t}\n\t\t})\n\t);\n\n\n\tconst renderScene = SceneMap(\n\t\ttabs.reduce((obj, item) => ({...obj, [item.key]: item.scene}), {})\n\t);\n\n\treturn (\n\t\t<TabView\n\t\t\tnavigationState={{ index, routes }}\n\t\t\trenderScene={renderScene}\n\t\t\tonIndexChange={setIndex}\n\t\t\tinitialLayout={initialLayout}\n\t\t\tswipeEnabled = {false}\n\t\t\trenderTabBar={props => (\n\t\t\t\t<TabBar\n\t\t\t\t  {...props}\n\t\t\t\t  activeColor = {'red'}\n\t\t\t\t  indicatorStyle={styles.indicatorStyle}\n\t\t\t\t  style={styles.normalStyle}\n\t\t\t\t  labelStyle = {styles.labelStyle}\n\t\t\t\t  renderLabel={({ route, focused }) => {return(\n\t\t\t\t\t<View>\n\t\t\t\t\t<Text\n\t\t\t\t\t  style={[styles.labelStyle, focused ? styles.activeTabTextColor : styles.tabTextColor]}\n\t\t\t\t\t>\n\t\t\t\t\t  {route.title}\n\t\t\t\t\t</Text>\n\t\t\t\t  </View>\n\t\t\t\t  )}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tindicatorStyle: {\n\t\tbackgroundColor: 'white'\n\t},\n\tnormalStyle:{\n\t\tbackgroundColor: '#212223'\n\t},\n\tlabelStyle:{\n\t\tfontWeight: 'bold',\n\t\tfontSize: 17\n\t},\n\tactiveTabTextColor:{\n\t\tcolor: 'white',\n\t},\n\ttabTextColor:{\n\t\tcolor: \"#9FA2A9\"\n\t}\n})\n\nexport default component;"]},"metadata":{},"sourceType":"module"}