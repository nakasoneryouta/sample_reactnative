{"ast":null,"code":"var _jsxFileName = \"/Users/nakasoneryouta/Desktop/sample_reactnative/src/components/atoms/SaveColorPalette/SaveColorPalette.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { colors, images } from \"../../../config\";\n\nvar component = function component(_ref) {\n  var saveColors = _ref.saveColors;\n  var DATA = [{\n    color1: \"#5AC8FA\",\n    color2: \"#00CFFF\"\n  }, {\n    color1: \"#007AFF\",\n    color2: \"#0047D5\"\n  }, {\n    color1: \"#5856D6\",\n    color2: \"#551FE0\"\n  }, {\n    color1: \"#AF52DE\",\n    color2: \"#AE1DD6\"\n  }, {\n    color1: \"#FF2D55\",\n    color2: \"#E80454\"\n  }, {\n    color1: \"#FF3B30\",\n    color2: \"#CD0000\"\n  }, {\n    color1: \"#FF9500\",\n    color2: \"#D66F00\"\n  }, {\n    color1: \"#FFCC00\",\n    color2: \"#928F00\"\n  }, {\n    color1: \"#34C759\",\n    color2: \"#00A800\"\n  }];\n\n  var _renderItem = function renderItem(colors, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return saveColors(colors);\n      },\n      style: styles.boxContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: [styles.box, {\n        backgroundColor: colors.color1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }), React.createElement(View, {\n      style: [styles.box2, {\n        backgroundColor: colors.color2\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.addColorContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: images.addColor,\n    style: styles.addColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })), React.createElement(FlatList, {\n    horizontal: true,\n    data: DATA,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return _renderItem(item, index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }));\n};\n\nvar BigCircle = 20;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginLeft: 10,\n    marginRight: 20\n  },\n  itemContainer: {\n    width: 45,\n    height: 45,\n    borderRadius: 30,\n    margin: 10,\n    backgroundColor: 'black',\n    borderColor: '#212223',\n    borderWidth: 1\n  },\n  boxContainer: {\n    flexDirection: 'row',\n    transform: [{\n      rotate: \"90deg\"\n    }],\n    margin: 15\n  },\n  addColorContainer: {\n    margin: 10\n  },\n  addColor: {\n    width: 38,\n    height: 38\n  },\n  box: {\n    width: BigCircle,\n    height: BigCircle * 2,\n    overflow: 'hidden',\n    backgroundColor: '#FECD00',\n    borderTopLeftRadius: BigCircle * 1.5,\n    borderBottomLeftRadius: BigCircle * 1.5\n  },\n  box2: {\n    width: BigCircle,\n    height: BigCircle * 2,\n    overflow: 'hidden',\n    backgroundColor: '#FC3B31',\n    borderTopRightRadius: BigCircle * 1.5,\n    borderBottomRightRadius: BigCircle * 1.5\n  }\n});\nexport default React.memo(component);","map":{"version":3,"sources":["/Users/nakasoneryouta/Desktop/sample_reactnative/src/components/atoms/SaveColorPalette/SaveColorPalette.tsx"],"names":["React","FlatList","colors","images","component","saveColors","DATA","color1","color2","renderItem","index","styles","boxContainer","box","backgroundColor","box2","container","addColorContainer","addColor","item","BigCircle","StyleSheet","create","justifyContent","alignItems","flexDirection","marginLeft","marginRight","itemContainer","width","height","borderRadius","margin","borderColor","borderWidth","transform","rotate","overflow","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity ,StyleSheet, Image} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { colors, images } from '../../../config';\n\ntype Props = {\n        saveColors: (colors: Colors) => void\n}\n\ntype Colors = {color1: string, color2: string}\n\nconst component: React.FC<Props> = ({saveColors}) => {\n\n        const DATA:Colors[] = [\n                {color1: \"#5AC8FA\",color2: \"#00CFFF\"},\n                {color1: \"#007AFF\",color2: \"#0047D5\"},\n                {color1: \"#5856D6\",color2: \"#551FE0\"},\n                {color1: \"#AF52DE\",color2: \"#AE1DD6\"},\n                {color1: \"#FF2D55\",color2: \"#E80454\"},\n                {color1: \"#FF3B30\",color2: \"#CD0000\"},\n                {color1: \"#FF9500\",color2: \"#D66F00\"},\n                {color1: \"#FFCC00\",color2: \"#928F00\"},\n                {color1: \"#34C759\",color2: \"#00A800\"}]\n\n        const renderItem = (colors: Colors,index: number) => (\n                <TouchableOpacity onPress = {() => saveColors(colors)} style = {styles.boxContainer}>\n                        <View style={[styles.box,{backgroundColor: colors.color1}]}></View>\n                        <View style={[styles.box2,{backgroundColor: colors.color2}]}></View>\n\t\t</TouchableOpacity>\n        );\n\n\treturn (\n        <View style = {styles.container}>\n\n                <TouchableOpacity style = {styles.addColorContainer}>\n                        <Image source = {images.addColor} style = {styles.addColor}/>\n                </TouchableOpacity>\n\n                <FlatList\n                        horizontal\n                        data={DATA}\n                        renderItem={({ item, index }) => renderItem(item,index)}\n                />\n        </View>\n\t)\n\n}\n\nconst BigCircle = 20\n\nconst styles = StyleSheet.create({\n        container:{\n                justifyContent: 'center',\n                alignItems: 'center',\n                flexDirection: 'row',\n                marginLeft: 10,\n                marginRight: 20,\n        },\n        itemContainer:{\n                width: 45,\n                height: 45,\n                borderRadius: 30,\n                margin: 10,\n                backgroundColor: 'black',\n                borderColor: '#212223',\n                borderWidth: 1,\n\n        },\n        boxContainer:{\n\t\tflexDirection: 'row',\n                transform: [{ rotate: \"90deg\" }],\n                margin: 15,\n        },\n        addColorContainer:{\n                margin: 10,\n        },\n        addColor: {\n                width: 38,\n                height: 38,\n        },\n        box: {\n\t\twidth: BigCircle,\n\t\theight: BigCircle * 2,\n\t\toverflow: 'hidden',\n\t\tbackgroundColor: '#FECD00',\n\t\tborderTopLeftRadius: BigCircle * 1.5,\n\t\tborderBottomLeftRadius: BigCircle * 1.5,\n\t},\n\tbox2: {\n\t\twidth: BigCircle,\n\t\theight: BigCircle * 2,\n\t\toverflow: 'hidden',\n\t\tbackgroundColor: '#FC3B31',\n\t\tborderTopRightRadius: BigCircle * 1.5,\n\t\tborderBottomRightRadius: BigCircle * 1.5,\n\t},\n});\n\nexport default React.memo(component);"]},"metadata":{},"sourceType":"module"}