{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SiriWave = factory());\n})(this, function () {\n  'use strict';\n\n  var _assign = function __assign() {\n    _assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) {\n          if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n      }\n\n      return t;\n    };\n\n    return _assign.apply(this, arguments);\n  };\n\n  function __rest(s, e) {\n    var t = {};\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }\n\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  }\n\n  var Curve = function () {\n    function Curve(ctrl, definition) {\n      this.ATT_FACTOR = 4;\n      this.GRAPH_X = 2;\n      this.AMPLITUDE_FACTOR = 0.6;\n      this.ctrl = ctrl;\n      this.definition = definition;\n    }\n\n    Curve.prototype.globalAttFn = function (x) {\n      return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, this.ATT_FACTOR)), this.ATT_FACTOR);\n    };\n\n    Curve.prototype._xpos = function (i) {\n      return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n    };\n\n    Curve.prototype._ypos = function (i) {\n      return this.AMPLITUDE_FACTOR * (this.globalAttFn(i) * (this.ctrl.heightMax * this.ctrl.amplitude) * (1 / this.definition.attenuation) * Math.sin(this.ctrl.opt.frequency * i - this.ctrl.phase));\n    };\n\n    Curve.prototype.draw = function () {\n      var ctx = this.ctrl.ctx;\n      ctx.moveTo(0, 0);\n      ctx.beginPath();\n      var color = this.ctrl.color.replace(/rgb\\(/g, \"\").replace(/\\)/g, \"\");\n      ctx.strokeStyle = \"rgba(\" + color + \",\" + this.definition.opacity + \")\";\n      ctx.lineWidth = this.definition.lineWidth;\n\n      for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n        ctx.lineTo(this._xpos(i), this.ctrl.heightMax + this._ypos(i));\n      }\n\n      ctx.stroke();\n    };\n\n    Curve.getDefinition = function () {\n      return [{\n        attenuation: -2,\n        lineWidth: 1,\n        opacity: 0.1\n      }, {\n        attenuation: -6,\n        lineWidth: 1,\n        opacity: 0.2\n      }, {\n        attenuation: 4,\n        lineWidth: 1,\n        opacity: 0.4\n      }, {\n        attenuation: 2,\n        lineWidth: 1,\n        opacity: 0.6\n      }, {\n        attenuation: 1,\n        lineWidth: 1.5,\n        opacity: 1\n      }];\n    };\n\n    return Curve;\n  }();\n\n  var iOS9Curve = function () {\n    function iOS9Curve(ctrl, definition) {\n      this.GRAPH_X = 25;\n      this.AMPLITUDE_FACTOR = 0.8;\n      this.SPEED_FACTOR = 1;\n      this.DEAD_PX = 2;\n      this.ATT_FACTOR = 4;\n      this.DESPAWN_FACTOR = 0.02;\n      this.NOOFCURVES_RANGES = [2, 5];\n      this.AMPLITUDE_RANGES = [0.3, 1];\n      this.OFFSET_RANGES = [-3, 3];\n      this.WIDTH_RANGES = [1, 3];\n      this.SPEED_RANGES = [0.5, 1];\n      this.DESPAWN_TIMEOUT_RANGES = [500, 2000];\n      this.ctrl = ctrl;\n      this.definition = definition;\n      this.respawn();\n    }\n\n    iOS9Curve.prototype.getRandomRange = function (e) {\n      return e[0] + Math.random() * (e[1] - e[0]);\n    };\n\n    iOS9Curve.prototype.respawnSingle = function (ci) {\n      this.phases[ci] = 0;\n      this.amplitudes[ci] = 0;\n      this.despawnTimeouts[ci] = this.getRandomRange(this.DESPAWN_TIMEOUT_RANGES);\n      this.offsets[ci] = this.getRandomRange(this.OFFSET_RANGES);\n      this.speeds[ci] = this.getRandomRange(this.SPEED_RANGES);\n      this.finalAmplitudes[ci] = this.getRandomRange(this.AMPLITUDE_RANGES);\n      this.widths[ci] = this.getRandomRange(this.WIDTH_RANGES);\n      this.verses[ci] = this.getRandomRange([-1, 1]);\n    };\n\n    iOS9Curve.prototype.getEmptyArray = function (count) {\n      return new Array(count);\n    };\n\n    iOS9Curve.prototype.respawn = function () {\n      this.spawnAt = Date.now();\n      this.noOfCurves = Math.floor(this.getRandomRange(this.NOOFCURVES_RANGES));\n      this.phases = this.getEmptyArray(this.noOfCurves);\n      this.offsets = this.getEmptyArray(this.noOfCurves);\n      this.speeds = this.getEmptyArray(this.noOfCurves);\n      this.finalAmplitudes = this.getEmptyArray(this.noOfCurves);\n      this.widths = this.getEmptyArray(this.noOfCurves);\n      this.amplitudes = this.getEmptyArray(this.noOfCurves);\n      this.despawnTimeouts = this.getEmptyArray(this.noOfCurves);\n      this.verses = this.getEmptyArray(this.noOfCurves);\n\n      for (var ci = 0; ci < this.noOfCurves; ci++) {\n        this.respawnSingle(ci);\n      }\n    };\n\n    iOS9Curve.prototype.globalAttFn = function (x) {\n      return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, 2)), this.ATT_FACTOR);\n    };\n\n    iOS9Curve.prototype.sin = function (x, phase) {\n      return Math.sin(x - phase);\n    };\n\n    iOS9Curve.prototype._grad = function (x, a, b) {\n      if (x > a && x < b) return 1;\n      return 1;\n    };\n\n    iOS9Curve.prototype.yRelativePos = function (i) {\n      var y = 0;\n\n      for (var ci = 0; ci < this.noOfCurves; ci++) {\n        var t = 4 * (-1 + ci / (this.noOfCurves - 1) * 2);\n        t += this.offsets[ci];\n        var k = 1 / this.widths[ci];\n        var x = i * k - t;\n        y += Math.abs(this.amplitudes[ci] * this.sin(this.verses[ci] * x, this.phases[ci]) * this.globalAttFn(x));\n      }\n\n      return y / this.noOfCurves;\n    };\n\n    iOS9Curve.prototype._ypos = function (i) {\n      return this.AMPLITUDE_FACTOR * this.ctrl.heightMax * this.ctrl.amplitude * this.yRelativePos(i) * this.globalAttFn(i / this.GRAPH_X * 2);\n    };\n\n    iOS9Curve.prototype._xpos = function (i) {\n      return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n    };\n\n    iOS9Curve.prototype.drawSupportLine = function () {\n      var ctx = this.ctrl.ctx;\n      var coo = [0, this.ctrl.heightMax, this.ctrl.width, 1];\n      var gradient = ctx.createLinearGradient.apply(ctx, coo);\n      gradient.addColorStop(0, \"transparent\");\n      gradient.addColorStop(0.1, \"rgba(255,255,255,.5)\");\n      gradient.addColorStop(1 - 0.1 - 0.1, \"rgba(255,255,255,.5)\");\n      gradient.addColorStop(1, \"transparent\");\n      ctx.fillStyle = gradient;\n      ctx.fillRect.apply(ctx, coo);\n    };\n\n    iOS9Curve.prototype.draw = function () {\n      var ctx = this.ctrl.ctx;\n      ctx.globalAlpha = 0.7;\n      ctx.globalCompositeOperation = \"lighter\";\n\n      if (this.definition.supportLine) {\n        return this.drawSupportLine();\n      }\n\n      for (var ci = 0; ci < this.noOfCurves; ci++) {\n        if (this.spawnAt + this.despawnTimeouts[ci] <= Date.now()) {\n          this.amplitudes[ci] -= this.DESPAWN_FACTOR;\n        } else {\n          this.amplitudes[ci] += this.DESPAWN_FACTOR;\n        }\n\n        this.amplitudes[ci] = Math.min(Math.max(this.amplitudes[ci], 0), this.finalAmplitudes[ci]);\n        this.phases[ci] = (this.phases[ci] + this.ctrl.speed * this.speeds[ci] * this.SPEED_FACTOR) % (2 * Math.PI);\n      }\n\n      var maxY = -Infinity;\n\n      for (var _i = 0, _a = [1, -1]; _i < _a.length; _i++) {\n        var sign = _a[_i];\n        ctx.beginPath();\n\n        for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n          var x = this._xpos(i);\n\n          var y = this._ypos(i);\n\n          ctx.lineTo(x, this.ctrl.heightMax - sign * y);\n          maxY = Math.max(maxY, y);\n        }\n\n        ctx.closePath();\n        ctx.fillStyle = \"rgba(\" + this.definition.color + \", 1)\";\n        ctx.strokeStyle = \"rgba(\" + this.definition.color + \", 1)\";\n        ctx.fill();\n      }\n\n      if (maxY < this.DEAD_PX && this.prevMaxY > maxY) {\n        this.respawn();\n      }\n\n      this.prevMaxY = maxY;\n      return null;\n    };\n\n    iOS9Curve.getDefinition = function () {\n      return [{\n        color: \"239,42,80\",\n        supportLine: true\n      }, {\n        color: \"239, 0, 0\"\n      }, {\n        color: \"239, 4, 90\"\n      }, {\n        color: \"239, 12, 130\"\n      }, {\n        color: \"160, 12, 126\"\n      }, {\n        color: \"2, 13, 122\"\n      }, {\n        color: \"0, 114, 182\"\n      }, {\n        color: \"0, 164, 231\"\n      }, {\n        color: \"2, 158, 159\"\n      }, {\n        color: \"0, 152, 37\"\n      }, {\n        color: \"157, 199, 0\"\n      }, {\n        color: \"255, 244, 0\"\n      }, {\n        color: \"252, 160, 0\"\n      }];\n    };\n\n    return iOS9Curve;\n  }();\n\n  var CurveStyle;\n\n  (function (CurveStyle) {\n    CurveStyle[\"ios\"] = \"ios\";\n    CurveStyle[\"ios9\"] = \"ios9\";\n  })(CurveStyle || (CurveStyle = {}));\n\n  var SiriWave = function () {\n    function SiriWave(_a) {\n      var _this = this;\n\n      var container = _a.container,\n          rest = __rest(_a, [\"container\"]);\n\n      this.phase = 0;\n      this.run = false;\n      this.curves = [];\n      var csStyle = window.getComputedStyle(container);\n      this.opt = _assign({\n        container: container,\n        style: CurveStyle.ios,\n        ratio: window.devicePixelRatio || 1,\n        speed: 0.2,\n        amplitude: 1,\n        frequency: 6,\n        color: \"#fff\",\n        cover: false,\n        width: parseInt(csStyle.width.replace(\"px\", \"\"), 10),\n        height: parseInt(csStyle.height.replace(\"px\", \"\"), 10),\n        autostart: true,\n        pixelDepth: 0.02,\n        lerpSpeed: 0.1\n      }, rest);\n      this.speed = Number(this.opt.speed);\n      this.amplitude = Number(this.opt.amplitude);\n      this.width = Number(this.opt.ratio * this.opt.width);\n      this.height = Number(this.opt.ratio * this.opt.height);\n      this.heightMax = Number(this.height / 2) - 6;\n      this.color = \"rgb(\" + this.hex2rgb(this.opt.color) + \")\";\n      this.interpolation = {\n        speed: this.speed,\n        amplitude: this.amplitude\n      };\n      this.canvas = document.createElement(\"canvas\");\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.canvas.width = this.width;\n      this.canvas.height = this.height;\n\n      if (this.opt.cover === true) {\n        this.canvas.style.width = this.canvas.style.height = \"100%\";\n      } else {\n        this.canvas.style.width = this.width / this.opt.ratio + \"px\";\n        this.canvas.style.height = this.height / this.opt.ratio + \"px\";\n      }\n\n      switch (this.opt.style) {\n        case CurveStyle.ios9:\n          this.curves = (this.opt.curveDefinition || iOS9Curve.getDefinition()).map(function (def) {\n            return new iOS9Curve(_this, def);\n          });\n          break;\n\n        case CurveStyle.ios:\n        default:\n          this.curves = (this.opt.curveDefinition || Curve.getDefinition()).map(function (def) {\n            return new Curve(_this, def);\n          });\n          break;\n      }\n\n      this.opt.container.appendChild(this.canvas);\n\n      if (this.opt.autostart) {\n        this.start();\n      }\n    }\n\n    SiriWave.prototype.hex2rgb = function (hex) {\n      var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n      hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n        return r + r + g + g + b + b;\n      });\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? parseInt(result[1], 16).toString() + \",\" + parseInt(result[2], 16).toString() + \",\" + parseInt(result[3], 16).toString() : null;\n    };\n\n    SiriWave.prototype.intLerp = function (v0, v1, t) {\n      return v0 * (1 - t) + v1 * t;\n    };\n\n    SiriWave.prototype.lerp = function (propertyStr) {\n      this[propertyStr] = this.intLerp(this[propertyStr], this.interpolation[propertyStr], this.opt.lerpSpeed);\n\n      if (this[propertyStr] - this.interpolation[propertyStr] === 0) {\n        this.interpolation[propertyStr] = null;\n      }\n\n      return this[propertyStr];\n    };\n\n    SiriWave.prototype._clear = function () {\n      this.ctx.globalCompositeOperation = \"destination-out\";\n      this.ctx.fillRect(0, 0, this.width, this.height);\n      this.ctx.globalCompositeOperation = \"source-over\";\n    };\n\n    SiriWave.prototype._draw = function () {\n      this.curves.forEach(function (curve) {\n        return curve.draw();\n      });\n    };\n\n    SiriWave.prototype.startDrawCycle = function () {\n      this._clear();\n\n      if (this.interpolation.amplitude !== null) this.lerp(\"amplitude\");\n      if (this.interpolation.speed !== null) this.lerp(\"speed\");\n\n      this._draw();\n\n      this.phase = (this.phase + Math.PI / 2 * this.speed) % (2 * Math.PI);\n\n      if (window.requestAnimationFrame) {\n        this.animationFrameId = window.requestAnimationFrame(this.startDrawCycle.bind(this));\n      } else {\n        this.timeoutId = setTimeout(this.startDrawCycle.bind(this), 20);\n      }\n    };\n\n    SiriWave.prototype.start = function () {\n      this.phase = 0;\n\n      if (!this.run) {\n        this.run = true;\n        this.startDrawCycle();\n      }\n    };\n\n    SiriWave.prototype.stop = function () {\n      this.phase = 0;\n      this.run = false;\n      this.animationFrameId && window.cancelAnimationFrame(this.animationFrameId);\n      this.timeoutId && clearTimeout(this.timeoutId);\n    };\n\n    SiriWave.prototype.set = function (propertyStr, value) {\n      this.interpolation[propertyStr] = value;\n    };\n\n    SiriWave.prototype.setSpeed = function (value) {\n      this.set(\"speed\", value);\n    };\n\n    SiriWave.prototype.setAmplitude = function (value) {\n      this.set(\"amplitude\", value);\n    };\n\n    return SiriWave;\n  }();\n\n  return SiriWave;\n});","map":{"version":3,"sources":["/Users/nakasoneryouta/Desktop/sample_reactnative/siriwave/dist/siriwave.umd.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","SiriWave","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Curve","ctrl","definition","ATT_FACTOR","GRAPH_X","AMPLITUDE_FACTOR","globalAttFn","x","Math","pow","_xpos","width","_ypos","heightMax","amplitude","attenuation","sin","opt","frequency","phase","draw","ctx","moveTo","beginPath","color","replace","strokeStyle","opacity","lineWidth","pixelDepth","lineTo","stroke","getDefinition","iOS9Curve","SPEED_FACTOR","DEAD_PX","DESPAWN_FACTOR","NOOFCURVES_RANGES","AMPLITUDE_RANGES","OFFSET_RANGES","WIDTH_RANGES","SPEED_RANGES","DESPAWN_TIMEOUT_RANGES","respawn","getRandomRange","random","respawnSingle","ci","phases","amplitudes","despawnTimeouts","offsets","speeds","finalAmplitudes","widths","verses","getEmptyArray","count","Array","spawnAt","Date","now","noOfCurves","floor","_grad","a","b","yRelativePos","y","k","abs","drawSupportLine","coo","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","globalAlpha","globalCompositeOperation","supportLine","min","max","speed","PI","maxY","Infinity","_i","_a","sign","closePath","fill","prevMaxY","CurveStyle","_this","container","rest","run","curves","csStyle","window","getComputedStyle","style","ios","ratio","devicePixelRatio","cover","parseInt","height","autostart","lerpSpeed","Number","hex2rgb","interpolation","canvas","document","createElement","getContext","ios9","curveDefinition","map","def","appendChild","start","hex","shorthandRegex","m","r","g","result","exec","toString","intLerp","v0","v1","lerp","propertyStr","_clear","_draw","forEach","curve","startDrawCycle","requestAnimationFrame","animationFrameId","bind","timeoutId","setTimeout","stop","cancelAnimationFrame","clearTimeout","set","value","setSpeed","setAmplitude"],"mappings":"AAAC,WAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AACxB,SAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAvF,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAACH,OAAD,CAAnD,IACCD,MAAM,GAAG,OAAOM,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiDN,MAAM,IAAIO,IAApE,EAA0EP,MAAM,CAACQ,QAAP,GAAkBP,OAAO,EADpG,CADA;AAGH,CAJA,EAIC,IAJD,EAIQ,YAAY;AAAE;;AAiBnB,MAAIQ,OAAQ,GAAG,oBAAW;AACtBA,IAAAA,OAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,SAASF,QAAT,CAAkBG,CAAlB,EAAqB;AAC7C,WAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,QAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,aAAK,IAAII,CAAT,IAAcL,CAAd;AAAiB,cAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAjE;AACH;;AACD,aAAON,CAAP;AACH,KAND;;AAOA,WAAOH,OAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,GATD;;AAWA,WAASO,MAAT,CAAgBV,CAAhB,EAAmBW,CAAnB,EAAsB;AAClB,QAAIZ,CAAC,GAAG,EAAR;;AACA,SAAK,IAAIM,CAAT,IAAcL,CAAd;AAAiB,UAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;;AAEA,QAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;AACpE,UAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;AACP;AACL,WAAOF,CAAP;AACH;;AAED,MAAIgB,KAAK,GAAkB,YAAY;AACnC,aAASA,KAAT,CAAeC,IAAf,EAAqBC,UAArB,EAAiC;AAC7B,WAAKC,UAAL,GAAkB,CAAlB;AACA,WAAKC,OAAL,GAAe,CAAf;AACA,WAAKC,gBAAL,GAAwB,GAAxB;AACA,WAAKJ,IAAL,GAAYA,IAAZ;AACA,WAAKC,UAAL,GAAkBA,UAAlB;AACH;;AACDF,IAAAA,KAAK,CAACT,SAAN,CAAgBe,WAAhB,GAA8B,UAAUC,CAAV,EAAa;AACvC,aAAOC,IAAI,CAACC,GAAL,CAAS,KAAKN,UAAL,IAAmB,KAAKA,UAAL,GAAkBK,IAAI,CAACC,GAAL,CAASF,CAAT,EAAY,KAAKJ,UAAjB,CAArC,CAAT,EAA6E,KAAKA,UAAlF,CAAP;AACH,KAFD;;AAGAH,IAAAA,KAAK,CAACT,SAAN,CAAgBmB,KAAhB,GAAwB,UAAUxB,CAAV,EAAa;AACjC,aAAO,KAAKe,IAAL,CAAUU,KAAV,IAAmB,CAACzB,CAAC,GAAG,KAAKkB,OAAV,KAAsB,KAAKA,OAAL,GAAe,CAArC,CAAnB,CAAP;AACH,KAFD;;AAGAJ,IAAAA,KAAK,CAACT,SAAN,CAAgBqB,KAAhB,GAAwB,UAAU1B,CAAV,EAAa;AACjC,aAAQ,KAAKmB,gBAAL,IACH,KAAKC,WAAL,CAAiBpB,CAAjB,KACI,KAAKe,IAAL,CAAUY,SAAV,GAAsB,KAAKZ,IAAL,CAAUa,SADpC,KAEI,IAAI,KAAKZ,UAAL,CAAgBa,WAFxB,IAGGP,IAAI,CAACQ,GAAL,CAAS,KAAKf,IAAL,CAAUgB,GAAV,CAAcC,SAAd,GAA0BhC,CAA1B,GAA8B,KAAKe,IAAL,CAAUkB,KAAjD,CAJA,CAAR;AAKH,KAND;;AAOAnB,IAAAA,KAAK,CAACT,SAAN,CAAgB6B,IAAhB,GAAuB,YAAY;AAC/B,UAAIC,GAAG,GAAG,KAAKpB,IAAL,CAAUoB,GAApB;AACAA,MAAAA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAc,CAAd;AACAD,MAAAA,GAAG,CAACE,SAAJ;AACA,UAAIC,KAAK,GAAG,KAAKvB,IAAL,CAAUuB,KAAV,CAAgBC,OAAhB,CAAwB,QAAxB,EAAkC,EAAlC,EAAsCA,OAAtC,CAA8C,KAA9C,EAAqD,EAArD,CAAZ;AACAJ,MAAAA,GAAG,CAACK,WAAJ,GAAkB,UAAUF,KAAV,GAAkB,GAAlB,GAAwB,KAAKtB,UAAL,CAAgByB,OAAxC,GAAkD,GAApE;AACAN,MAAAA,GAAG,CAACO,SAAJ,GAAgB,KAAK1B,UAAL,CAAgB0B,SAAhC;;AAEA,WAAK,IAAI1C,CAAC,GAAG,CAAC,KAAKkB,OAAnB,EAA4BlB,CAAC,IAAI,KAAKkB,OAAtC,EAA+ClB,CAAC,IAAI,KAAKe,IAAL,CAAUgB,GAAV,CAAcY,UAAlE,EAA8E;AAC1ER,QAAAA,GAAG,CAACS,MAAJ,CAAW,KAAKpB,KAAL,CAAWxB,CAAX,CAAX,EAA0B,KAAKe,IAAL,CAAUY,SAAV,GAAsB,KAAKD,KAAL,CAAW1B,CAAX,CAAhD;AACH;;AACDmC,MAAAA,GAAG,CAACU,MAAJ;AACH,KAZD;;AAaA/B,IAAAA,KAAK,CAACgC,aAAN,GAAsB,YAAY;AAC9B,aAAO,CACH;AACIjB,QAAAA,WAAW,EAAE,CAAC,CADlB;AAEIa,QAAAA,SAAS,EAAE,CAFf;AAGID,QAAAA,OAAO,EAAE;AAHb,OADG,EAMH;AACIZ,QAAAA,WAAW,EAAE,CAAC,CADlB;AAEIa,QAAAA,SAAS,EAAE,CAFf;AAGID,QAAAA,OAAO,EAAE;AAHb,OANG,EAWH;AACIZ,QAAAA,WAAW,EAAE,CADjB;AAEIa,QAAAA,SAAS,EAAE,CAFf;AAGID,QAAAA,OAAO,EAAE;AAHb,OAXG,EAgBH;AACIZ,QAAAA,WAAW,EAAE,CADjB;AAEIa,QAAAA,SAAS,EAAE,CAFf;AAGID,QAAAA,OAAO,EAAE;AAHb,OAhBG,EAqBH;AACIZ,QAAAA,WAAW,EAAE,CADjB;AAEIa,QAAAA,SAAS,EAAE,GAFf;AAGID,QAAAA,OAAO,EAAE;AAHb,OArBG,CAAP;AA2BH,KA5BD;;AA6BA,WAAO3B,KAAP;AACH,GAhE0B,EAA3B;;AAkEA,MAAIiC,SAAS,GAAkB,YAAY;AACvC,aAASA,SAAT,CAAmBhC,IAAnB,EAAyBC,UAAzB,EAAqC;AACjC,WAAKE,OAAL,GAAe,EAAf;AACA,WAAKC,gBAAL,GAAwB,GAAxB;AACA,WAAK6B,YAAL,GAAoB,CAApB;AACA,WAAKC,OAAL,GAAe,CAAf;AACA,WAAKhC,UAAL,GAAkB,CAAlB;AACA,WAAKiC,cAAL,GAAsB,IAAtB;AACA,WAAKC,iBAAL,GAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB;AACA,WAAKC,gBAAL,GAAwB,CAAC,GAAD,EAAM,CAAN,CAAxB;AACA,WAAKC,aAAL,GAAqB,CAAC,CAAC,CAAF,EAAK,CAAL,CAArB;AACA,WAAKC,YAAL,GAAoB,CAAC,CAAD,EAAI,CAAJ,CAApB;AACA,WAAKC,YAAL,GAAoB,CAAC,GAAD,EAAM,CAAN,CAApB;AACA,WAAKC,sBAAL,GAA8B,CAAC,GAAD,EAAM,IAAN,CAA9B;AACA,WAAKzC,IAAL,GAAYA,IAAZ;AACA,WAAKC,UAAL,GAAkBA,UAAlB;AACA,WAAKyC,OAAL;AACH;;AACDV,IAAAA,SAAS,CAAC1C,SAAV,CAAoBqD,cAApB,GAAqC,UAAUhD,CAAV,EAAa;AAC9C,aAAOA,CAAC,CAAC,CAAD,CAAD,GAAOY,IAAI,CAACqC,MAAL,MAAiBjD,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAzB,CAAd;AACH,KAFD;;AAGAqC,IAAAA,SAAS,CAAC1C,SAAV,CAAoBuD,aAApB,GAAoC,UAAUC,EAAV,EAAc;AAC9C,WAAKC,MAAL,CAAYD,EAAZ,IAAkB,CAAlB;AACA,WAAKE,UAAL,CAAgBF,EAAhB,IAAsB,CAAtB;AACA,WAAKG,eAAL,CAAqBH,EAArB,IAA2B,KAAKH,cAAL,CAAoB,KAAKF,sBAAzB,CAA3B;AACA,WAAKS,OAAL,CAAaJ,EAAb,IAAmB,KAAKH,cAAL,CAAoB,KAAKL,aAAzB,CAAnB;AACA,WAAKa,MAAL,CAAYL,EAAZ,IAAkB,KAAKH,cAAL,CAAoB,KAAKH,YAAzB,CAAlB;AACA,WAAKY,eAAL,CAAqBN,EAArB,IAA2B,KAAKH,cAAL,CAAoB,KAAKN,gBAAzB,CAA3B;AACA,WAAKgB,MAAL,CAAYP,EAAZ,IAAkB,KAAKH,cAAL,CAAoB,KAAKJ,YAAzB,CAAlB;AACA,WAAKe,MAAL,CAAYR,EAAZ,IAAkB,KAAKH,cAAL,CAAoB,CAAC,CAAC,CAAF,EAAK,CAAL,CAApB,CAAlB;AACH,KATD;;AAUAX,IAAAA,SAAS,CAAC1C,SAAV,CAAoBiE,aAApB,GAAoC,UAAUC,KAAV,EAAiB;AACjD,aAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACH,KAFD;;AAGAxB,IAAAA,SAAS,CAAC1C,SAAV,CAAoBoD,OAApB,GAA8B,YAAY;AACtC,WAAKgB,OAAL,GAAeC,IAAI,CAACC,GAAL,EAAf;AACA,WAAKC,UAAL,GAAkBtD,IAAI,CAACuD,KAAL,CAAW,KAAKnB,cAAL,CAAoB,KAAKP,iBAAzB,CAAX,CAAlB;AACA,WAAKW,MAAL,GAAc,KAAKQ,aAAL,CAAmB,KAAKM,UAAxB,CAAd;AACA,WAAKX,OAAL,GAAe,KAAKK,aAAL,CAAmB,KAAKM,UAAxB,CAAf;AACA,WAAKV,MAAL,GAAc,KAAKI,aAAL,CAAmB,KAAKM,UAAxB,CAAd;AACA,WAAKT,eAAL,GAAuB,KAAKG,aAAL,CAAmB,KAAKM,UAAxB,CAAvB;AACA,WAAKR,MAAL,GAAc,KAAKE,aAAL,CAAmB,KAAKM,UAAxB,CAAd;AACA,WAAKb,UAAL,GAAkB,KAAKO,aAAL,CAAmB,KAAKM,UAAxB,CAAlB;AACA,WAAKZ,eAAL,GAAuB,KAAKM,aAAL,CAAmB,KAAKM,UAAxB,CAAvB;AACA,WAAKP,MAAL,GAAc,KAAKC,aAAL,CAAmB,KAAKM,UAAxB,CAAd;;AACA,WAAK,IAAIf,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,KAAKe,UAA3B,EAAuCf,EAAE,EAAzC,EAA6C;AACzC,aAAKD,aAAL,CAAmBC,EAAnB;AACH;AACJ,KAdD;;AAeAd,IAAAA,SAAS,CAAC1C,SAAV,CAAoBe,WAApB,GAAkC,UAAUC,CAAV,EAAa;AAC3C,aAAOC,IAAI,CAACC,GAAL,CAAS,KAAKN,UAAL,IAAmB,KAAKA,UAAL,GAAkBK,IAAI,CAACC,GAAL,CAASF,CAAT,EAAY,CAAZ,CAArC,CAAT,EAA+D,KAAKJ,UAApE,CAAP;AACH,KAFD;;AAGA8B,IAAAA,SAAS,CAAC1C,SAAV,CAAoByB,GAApB,GAA0B,UAAUT,CAAV,EAAaY,KAAb,EAAoB;AAC1C,aAAOX,IAAI,CAACQ,GAAL,CAAST,CAAC,GAAGY,KAAb,CAAP;AACH,KAFD;;AAGAc,IAAAA,SAAS,CAAC1C,SAAV,CAAoByE,KAApB,GAA4B,UAAUzD,CAAV,EAAa0D,CAAb,EAAgBC,CAAhB,EAAmB;AAC3C,UAAI3D,CAAC,GAAG0D,CAAJ,IAAS1D,CAAC,GAAG2D,CAAjB,EACI,OAAO,CAAP;AACJ,aAAO,CAAP;AACH,KAJD;;AAKAjC,IAAAA,SAAS,CAAC1C,SAAV,CAAoB4E,YAApB,GAAmC,UAAUjF,CAAV,EAAa;AAC5C,UAAIkF,CAAC,GAAG,CAAR;;AACA,WAAK,IAAIrB,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,KAAKe,UAA3B,EAAuCf,EAAE,EAAzC,EAA6C;AAEzC,YAAI/D,CAAC,GAAG,KAAK,CAAC,CAAD,GAAM+D,EAAE,IAAI,KAAKe,UAAL,GAAkB,CAAtB,CAAH,GAA+B,CAAzC,CAAR;AAEA9E,QAAAA,CAAC,IAAI,KAAKmE,OAAL,CAAaJ,EAAb,CAAL;AACA,YAAIsB,CAAC,GAAG,IAAI,KAAKf,MAAL,CAAYP,EAAZ,CAAZ;AACA,YAAIxC,CAAC,GAAGrB,CAAC,GAAGmF,CAAJ,GAAQrF,CAAhB;AACAoF,QAAAA,CAAC,IAAI5D,IAAI,CAAC8D,GAAL,CAAS,KAAKrB,UAAL,CAAgBF,EAAhB,IAAsB,KAAK/B,GAAL,CAAS,KAAKuC,MAAL,CAAYR,EAAZ,IAAkBxC,CAA3B,EAA8B,KAAKyC,MAAL,CAAYD,EAAZ,CAA9B,CAAtB,GAAuE,KAAKzC,WAAL,CAAiBC,CAAjB,CAAhF,CAAL;AACH;;AAED,aAAO6D,CAAC,GAAG,KAAKN,UAAhB;AACH,KAbD;;AAcA7B,IAAAA,SAAS,CAAC1C,SAAV,CAAoBqB,KAApB,GAA4B,UAAU1B,CAAV,EAAa;AACrC,aAAQ,KAAKmB,gBAAL,GACJ,KAAKJ,IAAL,CAAUY,SADN,GAEJ,KAAKZ,IAAL,CAAUa,SAFN,GAGJ,KAAKqD,YAAL,CAAkBjF,CAAlB,CAHI,GAIJ,KAAKoB,WAAL,CAAkBpB,CAAC,GAAG,KAAKkB,OAAV,GAAqB,CAAtC,CAJJ;AAKH,KAND;;AAOA6B,IAAAA,SAAS,CAAC1C,SAAV,CAAoBmB,KAApB,GAA4B,UAAUxB,CAAV,EAAa;AACrC,aAAO,KAAKe,IAAL,CAAUU,KAAV,IAAmB,CAACzB,CAAC,GAAG,KAAKkB,OAAV,KAAsB,KAAKA,OAAL,GAAe,CAArC,CAAnB,CAAP;AACH,KAFD;;AAGA6B,IAAAA,SAAS,CAAC1C,SAAV,CAAoBgF,eAApB,GAAsC,YAAY;AAC9C,UAAIlD,GAAG,GAAG,KAAKpB,IAAL,CAAUoB,GAApB;AACA,UAAImD,GAAG,GAAG,CAAC,CAAD,EAAI,KAAKvE,IAAL,CAAUY,SAAd,EAAyB,KAAKZ,IAAL,CAAUU,KAAnC,EAA0C,CAA1C,CAAV;AACA,UAAI8D,QAAQ,GAAGpD,GAAG,CAACqD,oBAAJ,CAAyBhF,KAAzB,CAA+B2B,GAA/B,EAAoCmD,GAApC,CAAf;AACAC,MAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,aAAzB;AACAF,MAAAA,QAAQ,CAACE,YAAT,CAAsB,GAAtB,EAA2B,sBAA3B;AACAF,MAAAA,QAAQ,CAACE,YAAT,CAAsB,IAAI,GAAJ,GAAU,GAAhC,EAAqC,sBAArC;AACAF,MAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,aAAzB;AACAtD,MAAAA,GAAG,CAACuD,SAAJ,GAAgBH,QAAhB;AACApD,MAAAA,GAAG,CAACwD,QAAJ,CAAanF,KAAb,CAAmB2B,GAAnB,EAAwBmD,GAAxB;AACH,KAVD;;AAWAvC,IAAAA,SAAS,CAAC1C,SAAV,CAAoB6B,IAApB,GAA2B,YAAY;AACnC,UAAIC,GAAG,GAAG,KAAKpB,IAAL,CAAUoB,GAApB;AACAA,MAAAA,GAAG,CAACyD,WAAJ,GAAkB,GAAlB;AACAzD,MAAAA,GAAG,CAAC0D,wBAAJ,GAA+B,SAA/B;;AACA,UAAI,KAAK7E,UAAL,CAAgB8E,WAApB,EAAiC;AAE7B,eAAO,KAAKT,eAAL,EAAP;AACH;;AACD,WAAK,IAAIxB,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,KAAKe,UAA3B,EAAuCf,EAAE,EAAzC,EAA6C;AACzC,YAAI,KAAKY,OAAL,GAAe,KAAKT,eAAL,CAAqBH,EAArB,CAAf,IAA2Ca,IAAI,CAACC,GAAL,EAA/C,EAA2D;AACvD,eAAKZ,UAAL,CAAgBF,EAAhB,KAAuB,KAAKX,cAA5B;AACH,SAFD,MAGK;AACD,eAAKa,UAAL,CAAgBF,EAAhB,KAAuB,KAAKX,cAA5B;AACH;;AACD,aAAKa,UAAL,CAAgBF,EAAhB,IAAsBvC,IAAI,CAACyE,GAAL,CAASzE,IAAI,CAAC0E,GAAL,CAAS,KAAKjC,UAAL,CAAgBF,EAAhB,CAAT,EAA8B,CAA9B,CAAT,EAA2C,KAAKM,eAAL,CAAqBN,EAArB,CAA3C,CAAtB;AACA,aAAKC,MAAL,CAAYD,EAAZ,IAAkB,CAAC,KAAKC,MAAL,CAAYD,EAAZ,IAAkB,KAAK9C,IAAL,CAAUkF,KAAV,GAAkB,KAAK/B,MAAL,CAAYL,EAAZ,CAAlB,GAAoC,KAAKb,YAA5D,KAA6E,IAAI1B,IAAI,CAAC4E,EAAtF,CAAlB;AACH;;AACD,UAAIC,IAAI,GAAG,CAACC,QAAZ;;AAEA,WAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,CAAC,CAAD,EAAI,CAAC,CAAL,CAAtB,EAA+BD,EAAE,GAAGC,EAAE,CAACnG,MAAvC,EAA+CkG,EAAE,EAAjD,EAAqD;AACjD,YAAIE,IAAI,GAAGD,EAAE,CAACD,EAAD,CAAb;AACAlE,QAAAA,GAAG,CAACE,SAAJ;;AACA,aAAK,IAAIrC,CAAC,GAAG,CAAC,KAAKkB,OAAnB,EAA4BlB,CAAC,IAAI,KAAKkB,OAAtC,EAA+ClB,CAAC,IAAI,KAAKe,IAAL,CAAUgB,GAAV,CAAcY,UAAlE,EAA8E;AAC1E,cAAItB,CAAC,GAAG,KAAKG,KAAL,CAAWxB,CAAX,CAAR;;AACA,cAAIkF,CAAC,GAAG,KAAKxD,KAAL,CAAW1B,CAAX,CAAR;;AACAmC,UAAAA,GAAG,CAACS,MAAJ,CAAWvB,CAAX,EAAc,KAAKN,IAAL,CAAUY,SAAV,GAAsB4E,IAAI,GAAGrB,CAA3C;AACAiB,UAAAA,IAAI,GAAG7E,IAAI,CAAC0E,GAAL,CAASG,IAAT,EAAejB,CAAf,CAAP;AACH;;AACD/C,QAAAA,GAAG,CAACqE,SAAJ;AACArE,QAAAA,GAAG,CAACuD,SAAJ,GAAgB,UAAU,KAAK1E,UAAL,CAAgBsB,KAA1B,GAAkC,MAAlD;AACAH,QAAAA,GAAG,CAACK,WAAJ,GAAkB,UAAU,KAAKxB,UAAL,CAAgBsB,KAA1B,GAAkC,MAApD;AACAH,QAAAA,GAAG,CAACsE,IAAJ;AACH;;AACD,UAAIN,IAAI,GAAG,KAAKlD,OAAZ,IAAuB,KAAKyD,QAAL,GAAgBP,IAA3C,EAAiD;AAC7C,aAAK1C,OAAL;AACH;;AACD,WAAKiD,QAAL,GAAgBP,IAAhB;AACA,aAAO,IAAP;AACH,KAvCD;;AAwCApD,IAAAA,SAAS,CAACD,aAAV,GAA0B,YAAY;AAClC,aAAO,CACH;AACIR,QAAAA,KAAK,EAAE,WADX;AAEIwD,QAAAA,WAAW,EAAE;AAFjB,OADG,EAKH;AACIxD,QAAAA,KAAK,EAAE;AADX,OALG,EAQH;AACIA,QAAAA,KAAK,EAAE;AADX,OARG,EAWH;AACIA,QAAAA,KAAK,EAAE;AADX,OAXG,EAcH;AACIA,QAAAA,KAAK,EAAE;AADX,OAdG,EAiBH;AACIA,QAAAA,KAAK,EAAE;AADX,OAjBG,EAoBH;AACIA,QAAAA,KAAK,EAAE;AADX,OApBG,EAuBH;AACIA,QAAAA,KAAK,EAAE;AADX,OAvBG,EA0BH;AACIA,QAAAA,KAAK,EAAE;AADX,OA1BG,EA6BH;AACIA,QAAAA,KAAK,EAAE;AADX,OA7BG,EAgCH;AACIA,QAAAA,KAAK,EAAE;AADX,OAhCG,EAmCH;AACIA,QAAAA,KAAK,EAAE;AADX,OAnCG,EAsCH;AACIA,QAAAA,KAAK,EAAE;AADX,OAtCG,CAAP;AA0CH,KA3CD;;AA4CA,WAAOS,SAAP;AACH,GApL8B,EAA/B;;AAsLA,MAAI4D,UAAJ;;AACA,GAAC,UAAUA,UAAV,EAAsB;AACnBA,IAAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAApB;AACAA,IAAAA,UAAU,CAAC,MAAD,CAAV,GAAqB,MAArB;AACH,GAHD,EAGGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAHb;;AAIA,MAAIjH,QAAQ,GAAkB,YAAY;AACtC,aAASA,QAAT,CAAkB4G,EAAlB,EAAsB;AAClB,UAAIM,KAAK,GAAG,IAAZ;;AACA,UAAIC,SAAS,GAAGP,EAAE,CAACO,SAAnB;AAAA,UAA8BC,IAAI,GAAGrG,MAAM,CAAC6F,EAAD,EAAK,CAAC,WAAD,CAAL,CAA3C;;AAEA,WAAKrE,KAAL,GAAa,CAAb;AAEA,WAAK8E,GAAL,GAAW,KAAX;AAEA,WAAKC,MAAL,GAAc,EAAd;AACA,UAAIC,OAAO,GAAGC,MAAM,CAACC,gBAAP,CAAwBN,SAAxB,CAAd;AACA,WAAK9E,GAAL,GAAWpC,OAAQ,CAAC;AAAEkH,QAAAA,SAAS,EAAEA,SAAb;AAAwBO,QAAAA,KAAK,EAAET,UAAU,CAACU,GAA1C;AAA+CC,QAAAA,KAAK,EAAEJ,MAAM,CAACK,gBAAP,IAA2B,CAAjF;AAAoFtB,QAAAA,KAAK,EAAE,GAA3F;AAAgGrE,QAAAA,SAAS,EAAE,CAA3G;AAA8GI,QAAAA,SAAS,EAAE,CAAzH;AAA4HM,QAAAA,KAAK,EAAE,MAAnI;AAA2IkF,QAAAA,KAAK,EAAE,KAAlJ;AAAyJ/F,QAAAA,KAAK,EAAEgG,QAAQ,CAACR,OAAO,CAACxF,KAAR,CAAcc,OAAd,CAAsB,IAAtB,EAA4B,EAA5B,CAAD,EAAkC,EAAlC,CAAxK;AAA+MmF,QAAAA,MAAM,EAAED,QAAQ,CAACR,OAAO,CAACS,MAAR,CAAenF,OAAf,CAAuB,IAAvB,EAA6B,EAA7B,CAAD,EAAmC,EAAnC,CAA/N;AAAuQoF,QAAAA,SAAS,EAAE,IAAlR;AAAwRhF,QAAAA,UAAU,EAAE,IAApS;AAA0SiF,QAAAA,SAAS,EAAE;AAArT,OAAD,EAA6Td,IAA7T,CAAnB;AAIA,WAAKb,KAAL,GAAa4B,MAAM,CAAC,KAAK9F,GAAL,CAASkE,KAAV,CAAnB;AAIA,WAAKrE,SAAL,GAAiBiG,MAAM,CAAC,KAAK9F,GAAL,CAASH,SAAV,CAAvB;AAIA,WAAKH,KAAL,GAAaoG,MAAM,CAAC,KAAK9F,GAAL,CAASuF,KAAT,GAAiB,KAAKvF,GAAL,CAASN,KAA3B,CAAnB;AAIA,WAAKiG,MAAL,GAAcG,MAAM,CAAC,KAAK9F,GAAL,CAASuF,KAAT,GAAiB,KAAKvF,GAAL,CAAS2F,MAA3B,CAApB;AAIA,WAAK/F,SAAL,GAAiBkG,MAAM,CAAC,KAAKH,MAAL,GAAc,CAAf,CAAN,GAA0B,CAA3C;AAIA,WAAKpF,KAAL,GAAa,SAAS,KAAKwF,OAAL,CAAa,KAAK/F,GAAL,CAASO,KAAtB,CAAT,GAAwC,GAArD;AAKA,WAAKyF,aAAL,GAAqB;AACjB9B,QAAAA,KAAK,EAAE,KAAKA,KADK;AAEjBrE,QAAAA,SAAS,EAAE,KAAKA;AAFC,OAArB;AAOA,WAAKoG,MAAL,GAAcC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AAIA,WAAK/F,GAAL,GAAW,KAAK6F,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAX;AAEA,WAAKH,MAAL,CAAYvG,KAAZ,GAAoB,KAAKA,KAAzB;AACA,WAAKuG,MAAL,CAAYN,MAAZ,GAAqB,KAAKA,MAA1B;;AAEA,UAAI,KAAK3F,GAAL,CAASyF,KAAT,KAAmB,IAAvB,EAA6B;AACzB,aAAKQ,MAAL,CAAYZ,KAAZ,CAAkB3F,KAAlB,GAA0B,KAAKuG,MAAL,CAAYZ,KAAZ,CAAkBM,MAAlB,GAA2B,MAArD;AACH,OAFD,MAGK;AACD,aAAKM,MAAL,CAAYZ,KAAZ,CAAkB3F,KAAlB,GAA0B,KAAKA,KAAL,GAAa,KAAKM,GAAL,CAASuF,KAAtB,GAA8B,IAAxD;AACA,aAAKU,MAAL,CAAYZ,KAAZ,CAAkBM,MAAlB,GAA2B,KAAKA,MAAL,GAAc,KAAK3F,GAAL,CAASuF,KAAvB,GAA+B,IAA1D;AACH;;AAED,cAAQ,KAAKvF,GAAL,CAASqF,KAAjB;AACI,aAAKT,UAAU,CAACyB,IAAhB;AACI,eAAKpB,MAAL,GAAc,CAAC,KAAKjF,GAAL,CAASsG,eAAT,IAA4BtF,SAAS,CAACD,aAAV,EAA7B,EAAwDwF,GAAxD,CAA4D,UAAUC,GAAV,EAAe;AAAE,mBAAO,IAAIxF,SAAJ,CAAc6D,KAAd,EAAqB2B,GAArB,CAAP;AAAmC,WAAhH,CAAd;AACA;;AACJ,aAAK5B,UAAU,CAACU,GAAhB;AACA;AACI,eAAKL,MAAL,GAAc,CAAC,KAAKjF,GAAL,CAASsG,eAAT,IAA4BvH,KAAK,CAACgC,aAAN,EAA7B,EAAoDwF,GAApD,CAAwD,UAAUC,GAAV,EAAe;AAAE,mBAAO,IAAIzH,KAAJ,CAAU8F,KAAV,EAAiB2B,GAAjB,CAAP;AAA+B,WAAxG,CAAd;AACA;AAPR;;AAUA,WAAKxG,GAAL,CAAS8E,SAAT,CAAmB2B,WAAnB,CAA+B,KAAKR,MAApC;;AAEA,UAAI,KAAKjG,GAAL,CAAS4F,SAAb,EAAwB;AACpB,aAAKc,KAAL;AACH;AACJ;;AAID/I,IAAAA,QAAQ,CAACW,SAAT,CAAmByH,OAAnB,GAA6B,UAAUY,GAAV,EAAe;AACxC,UAAIC,cAAc,GAAG,kCAArB;AACAD,MAAAA,GAAG,GAAGA,GAAG,CAACnG,OAAJ,CAAYoG,cAAZ,EAA4B,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB9D,CAAnB,EAAsB;AAAE,eAAO6D,CAAC,GAAGA,CAAJ,GAAQC,CAAR,GAAYA,CAAZ,GAAgB9D,CAAhB,GAAoBA,CAA3B;AAA+B,OAAnF,CAAN;AACA,UAAI+D,MAAM,GAAG,4CAA4CC,IAA5C,CAAiDN,GAAjD,CAAb;AACA,aAAOK,MAAM,GACPtB,QAAQ,CAACsB,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,CAAwBE,QAAxB,KAAqC,GAArC,GAA2CxB,QAAQ,CAACsB,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,CAAwBE,QAAxB,EAA3C,GAAgF,GAAhF,GAAsFxB,QAAQ,CAACsB,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,CAAwBE,QAAxB,EAD/E,GAEP,IAFN;AAGH,KAPD;;AAQAvJ,IAAAA,QAAQ,CAACW,SAAT,CAAmB6I,OAAnB,GAA6B,UAAUC,EAAV,EAAcC,EAAd,EAAkBtJ,CAAlB,EAAqB;AAC9C,aAAOqJ,EAAE,IAAI,IAAIrJ,CAAR,CAAF,GAAesJ,EAAE,GAAGtJ,CAA3B;AACH,KAFD;;AAMAJ,IAAAA,QAAQ,CAACW,SAAT,CAAmBgJ,IAAnB,GAA0B,UAAUC,WAAV,EAAuB;AAC7C,WAAKA,WAAL,IAAoB,KAAKJ,OAAL,CAAa,KAAKI,WAAL,CAAb,EAAgC,KAAKvB,aAAL,CAAmBuB,WAAnB,CAAhC,EAAiE,KAAKvH,GAAL,CAAS6F,SAA1E,CAApB;;AACA,UAAI,KAAK0B,WAAL,IAAoB,KAAKvB,aAAL,CAAmBuB,WAAnB,CAApB,KAAwD,CAA5D,EAA+D;AAC3D,aAAKvB,aAAL,CAAmBuB,WAAnB,IAAkC,IAAlC;AACH;;AACD,aAAO,KAAKA,WAAL,CAAP;AACH,KAND;;AAUA5J,IAAAA,QAAQ,CAACW,SAAT,CAAmBkJ,MAAnB,GAA4B,YAAY;AACpC,WAAKpH,GAAL,CAAS0D,wBAAT,GAAoC,iBAApC;AACA,WAAK1D,GAAL,CAASwD,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAKlE,KAA7B,EAAoC,KAAKiG,MAAzC;AACA,WAAKvF,GAAL,CAAS0D,wBAAT,GAAoC,aAApC;AACH,KAJD;;AAQAnG,IAAAA,QAAQ,CAACW,SAAT,CAAmBmJ,KAAnB,GAA2B,YAAY;AACnC,WAAKxC,MAAL,CAAYyC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AAAE,eAAOA,KAAK,CAACxH,IAAN,EAAP;AAAsB,OAA7D;AACH,KAFD;;AAOAxC,IAAAA,QAAQ,CAACW,SAAT,CAAmBsJ,cAAnB,GAAoC,YAAY;AAC5C,WAAKJ,MAAL;;AAEA,UAAI,KAAKxB,aAAL,CAAmBnG,SAAnB,KAAiC,IAArC,EACI,KAAKyH,IAAL,CAAU,WAAV;AACJ,UAAI,KAAKtB,aAAL,CAAmB9B,KAAnB,KAA6B,IAAjC,EACI,KAAKoD,IAAL,CAAU,OAAV;;AACJ,WAAKG,KAAL;;AACA,WAAKvH,KAAL,GAAa,CAAC,KAAKA,KAAL,GAAcX,IAAI,CAAC4E,EAAL,GAAU,CAAX,GAAgB,KAAKD,KAAnC,KAA6C,IAAI3E,IAAI,CAAC4E,EAAtD,CAAb;;AACA,UAAIgB,MAAM,CAAC0C,qBAAX,EAAkC;AAC9B,aAAKC,gBAAL,GAAwB3C,MAAM,CAAC0C,qBAAP,CAA6B,KAAKD,cAAL,CAAoBG,IAApB,CAAyB,IAAzB,CAA7B,CAAxB;AACH,OAFD,MAGK;AACD,aAAKC,SAAL,GAAiBC,UAAU,CAAC,KAAKL,cAAL,CAAoBG,IAApB,CAAyB,IAAzB,CAAD,EAAiC,EAAjC,CAA3B;AACH;AACJ,KAfD;;AAoBApK,IAAAA,QAAQ,CAACW,SAAT,CAAmBoI,KAAnB,GAA2B,YAAY;AACnC,WAAKxG,KAAL,GAAa,CAAb;;AAEA,UAAI,CAAC,KAAK8E,GAAV,EAAe;AACX,aAAKA,GAAL,GAAW,IAAX;AACA,aAAK4C,cAAL;AACH;AACJ,KAPD;;AAWAjK,IAAAA,QAAQ,CAACW,SAAT,CAAmB4J,IAAnB,GAA0B,YAAY;AAClC,WAAKhI,KAAL,GAAa,CAAb;AACA,WAAK8E,GAAL,GAAW,KAAX;AAEA,WAAK8C,gBAAL,IAAyB3C,MAAM,CAACgD,oBAAP,CAA4B,KAAKL,gBAAjC,CAAzB;AACA,WAAKE,SAAL,IAAkBI,YAAY,CAAC,KAAKJ,SAAN,CAA9B;AACH,KAND;;AAUArK,IAAAA,QAAQ,CAACW,SAAT,CAAmB+J,GAAnB,GAAyB,UAAUd,WAAV,EAAuBe,KAAvB,EAA8B;AACnD,WAAKtC,aAAL,CAAmBuB,WAAnB,IAAkCe,KAAlC;AACH,KAFD;;AAMA3K,IAAAA,QAAQ,CAACW,SAAT,CAAmBiK,QAAnB,GAA8B,UAAUD,KAAV,EAAiB;AAC3C,WAAKD,GAAL,CAAS,OAAT,EAAkBC,KAAlB;AACH,KAFD;;AAMA3K,IAAAA,QAAQ,CAACW,SAAT,CAAmBkK,YAAnB,GAAkC,UAAUF,KAAV,EAAiB;AAC/C,WAAKD,GAAL,CAAS,WAAT,EAAsBC,KAAtB;AACH,KAFD;;AAGA,WAAO3K,QAAP;AACH,GAnL6B,EAA9B;;AAqLA,SAAOA,QAAP;AAEH,CAheA,CAAD","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SiriWave = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n\n    var __assign = function() {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n            t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n\n    var Curve = /** @class */ (function () {\n        function Curve(ctrl, definition) {\n            this.ATT_FACTOR = 4;\n            this.GRAPH_X = 2;\n            this.AMPLITUDE_FACTOR = 0.6;\n            this.ctrl = ctrl;\n            this.definition = definition;\n        }\n        Curve.prototype.globalAttFn = function (x) {\n            return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, this.ATT_FACTOR)), this.ATT_FACTOR);\n        };\n        Curve.prototype._xpos = function (i) {\n            return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n        };\n        Curve.prototype._ypos = function (i) {\n            return (this.AMPLITUDE_FACTOR *\n                (this.globalAttFn(i) *\n                    (this.ctrl.heightMax * this.ctrl.amplitude) *\n                    (1 / this.definition.attenuation) *\n                    Math.sin(this.ctrl.opt.frequency * i - this.ctrl.phase)));\n        };\n        Curve.prototype.draw = function () {\n            var ctx = this.ctrl.ctx;\n            ctx.moveTo(0, 0);\n            ctx.beginPath();\n            var color = this.ctrl.color.replace(/rgb\\(/g, \"\").replace(/\\)/g, \"\");\n            ctx.strokeStyle = \"rgba(\" + color + \",\" + this.definition.opacity + \")\";\n            ctx.lineWidth = this.definition.lineWidth;\n            // Cycle the graph from -X to +X every PX_DEPTH and draw the line\n            for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n                ctx.lineTo(this._xpos(i), this.ctrl.heightMax + this._ypos(i));\n            }\n            ctx.stroke();\n        };\n        Curve.getDefinition = function () {\n            return [\n                {\n                    attenuation: -2,\n                    lineWidth: 1,\n                    opacity: 0.1,\n                },\n                {\n                    attenuation: -6,\n                    lineWidth: 1,\n                    opacity: 0.2,\n                },\n                {\n                    attenuation: 4,\n                    lineWidth: 1,\n                    opacity: 0.4,\n                },\n                {\n                    attenuation: 2,\n                    lineWidth: 1,\n                    opacity: 0.6,\n                },\n                {\n                    attenuation: 1,\n                    lineWidth: 1.5,\n                    opacity: 1,\n                },\n            ];\n        };\n        return Curve;\n    }());\n\n    var iOS9Curve = /** @class */ (function () {\n        function iOS9Curve(ctrl, definition) {\n            this.GRAPH_X = 25;\n            this.AMPLITUDE_FACTOR = 0.8;\n            this.SPEED_FACTOR = 1;\n            this.DEAD_PX = 2;\n            this.ATT_FACTOR = 4;\n            this.DESPAWN_FACTOR = 0.02;\n            this.NOOFCURVES_RANGES = [2, 5];\n            this.AMPLITUDE_RANGES = [0.3, 1];\n            this.OFFSET_RANGES = [-3, 3];\n            this.WIDTH_RANGES = [1, 3];\n            this.SPEED_RANGES = [0.5, 1];\n            this.DESPAWN_TIMEOUT_RANGES = [500, 2000];\n            this.ctrl = ctrl;\n            this.definition = definition;\n            this.respawn();\n        }\n        iOS9Curve.prototype.getRandomRange = function (e) {\n            return e[0] + Math.random() * (e[1] - e[0]);\n        };\n        iOS9Curve.prototype.respawnSingle = function (ci) {\n            this.phases[ci] = 0;\n            this.amplitudes[ci] = 0;\n            this.despawnTimeouts[ci] = this.getRandomRange(this.DESPAWN_TIMEOUT_RANGES);\n            this.offsets[ci] = this.getRandomRange(this.OFFSET_RANGES);\n            this.speeds[ci] = this.getRandomRange(this.SPEED_RANGES);\n            this.finalAmplitudes[ci] = this.getRandomRange(this.AMPLITUDE_RANGES);\n            this.widths[ci] = this.getRandomRange(this.WIDTH_RANGES);\n            this.verses[ci] = this.getRandomRange([-1, 1]);\n        };\n        iOS9Curve.prototype.getEmptyArray = function (count) {\n            return new Array(count);\n        };\n        iOS9Curve.prototype.respawn = function () {\n            this.spawnAt = Date.now();\n            this.noOfCurves = Math.floor(this.getRandomRange(this.NOOFCURVES_RANGES));\n            this.phases = this.getEmptyArray(this.noOfCurves);\n            this.offsets = this.getEmptyArray(this.noOfCurves);\n            this.speeds = this.getEmptyArray(this.noOfCurves);\n            this.finalAmplitudes = this.getEmptyArray(this.noOfCurves);\n            this.widths = this.getEmptyArray(this.noOfCurves);\n            this.amplitudes = this.getEmptyArray(this.noOfCurves);\n            this.despawnTimeouts = this.getEmptyArray(this.noOfCurves);\n            this.verses = this.getEmptyArray(this.noOfCurves);\n            for (var ci = 0; ci < this.noOfCurves; ci++) {\n                this.respawnSingle(ci);\n            }\n        };\n        iOS9Curve.prototype.globalAttFn = function (x) {\n            return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, 2)), this.ATT_FACTOR);\n        };\n        iOS9Curve.prototype.sin = function (x, phase) {\n            return Math.sin(x - phase);\n        };\n        iOS9Curve.prototype._grad = function (x, a, b) {\n            if (x > a && x < b)\n                return 1;\n            return 1;\n        };\n        iOS9Curve.prototype.yRelativePos = function (i) {\n            var y = 0;\n            for (var ci = 0; ci < this.noOfCurves; ci++) {\n                // Generate a static T so that each curve is distant from each oterh\n                var t = 4 * (-1 + (ci / (this.noOfCurves - 1)) * 2);\n                // but add a dynamic offset\n                t += this.offsets[ci];\n                var k = 1 / this.widths[ci];\n                var x = i * k - t;\n                y += Math.abs(this.amplitudes[ci] * this.sin(this.verses[ci] * x, this.phases[ci]) * this.globalAttFn(x));\n            }\n            // Divide for NoOfCurves so that y <= 1\n            return y / this.noOfCurves;\n        };\n        iOS9Curve.prototype._ypos = function (i) {\n            return (this.AMPLITUDE_FACTOR *\n                this.ctrl.heightMax *\n                this.ctrl.amplitude *\n                this.yRelativePos(i) *\n                this.globalAttFn((i / this.GRAPH_X) * 2));\n        };\n        iOS9Curve.prototype._xpos = function (i) {\n            return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n        };\n        iOS9Curve.prototype.drawSupportLine = function () {\n            var ctx = this.ctrl.ctx;\n            var coo = [0, this.ctrl.heightMax, this.ctrl.width, 1];\n            var gradient = ctx.createLinearGradient.apply(ctx, coo);\n            gradient.addColorStop(0, \"transparent\");\n            gradient.addColorStop(0.1, \"rgba(255,255,255,.5)\");\n            gradient.addColorStop(1 - 0.1 - 0.1, \"rgba(255,255,255,.5)\");\n            gradient.addColorStop(1, \"transparent\");\n            ctx.fillStyle = gradient;\n            ctx.fillRect.apply(ctx, coo);\n        };\n        iOS9Curve.prototype.draw = function () {\n            var ctx = this.ctrl.ctx;\n            ctx.globalAlpha = 0.7;\n            ctx.globalCompositeOperation = \"lighter\";\n            if (this.definition.supportLine) {\n                // Draw the support line\n                return this.drawSupportLine();\n            }\n            for (var ci = 0; ci < this.noOfCurves; ci++) {\n                if (this.spawnAt + this.despawnTimeouts[ci] <= Date.now()) {\n                    this.amplitudes[ci] -= this.DESPAWN_FACTOR;\n                }\n                else {\n                    this.amplitudes[ci] += this.DESPAWN_FACTOR;\n                }\n                this.amplitudes[ci] = Math.min(Math.max(this.amplitudes[ci], 0), this.finalAmplitudes[ci]);\n                this.phases[ci] = (this.phases[ci] + this.ctrl.speed * this.speeds[ci] * this.SPEED_FACTOR) % (2 * Math.PI);\n            }\n            var maxY = -Infinity;\n            // Write two opposite waves\n            for (var _i = 0, _a = [1, -1]; _i < _a.length; _i++) {\n                var sign = _a[_i];\n                ctx.beginPath();\n                for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n                    var x = this._xpos(i);\n                    var y = this._ypos(i);\n                    ctx.lineTo(x, this.ctrl.heightMax - sign * y);\n                    maxY = Math.max(maxY, y);\n                }\n                ctx.closePath();\n                ctx.fillStyle = \"rgba(\" + this.definition.color + \", 1)\";\n                ctx.strokeStyle = \"rgba(\" + this.definition.color + \", 1)\";\n                ctx.fill();\n            }\n            if (maxY < this.DEAD_PX && this.prevMaxY > maxY) {\n                this.respawn();\n            }\n            this.prevMaxY = maxY;\n            return null;\n        };\n        iOS9Curve.getDefinition = function () {\n            return [\n                {\n                    color: \"239,42,80\",\n                    supportLine: true,\n                },\n                {\n                    color: \"239, 0, 0\",\n                },\n                {\n                    color: \"239, 4, 90\",\n                },\n                {\n                    color: \"239, 12, 130\",\n                },\n                {\n                    color: \"160, 12, 126\",\n                },\n                {\n                    color: \"2, 13, 122\",\n                },\n                {\n                    color: \"0, 114, 182\",\n                },\n                {\n                    color: \"0, 164, 231\",\n                },\n                {\n                    color: \"2, 158, 159\",\n                },\n                {\n                    color: \"0, 152, 37\",\n                },\n                {\n                    color: \"157, 199, 0\",\n                },\n                {\n                    color: \"255, 244, 0\",\n                },\n                {\n                    color: \"252, 160, 0\",\n                },\n            ];\n        };\n        return iOS9Curve;\n    }());\n\n    var CurveStyle;\n    (function (CurveStyle) {\n        CurveStyle[\"ios\"] = \"ios\";\n        CurveStyle[\"ios9\"] = \"ios9\";\n    })(CurveStyle || (CurveStyle = {}));\n    var SiriWave = /** @class */ (function () {\n        function SiriWave(_a) {\n            var _this = this;\n            var container = _a.container, rest = __rest(_a, [\"container\"]);\n            // Phase of the wave (passed to Math.sin function)\n            this.phase = 0;\n            // Boolean value indicating the the animation is running\n            this.run = false;\n            // Curves objects to animate\n            this.curves = [];\n            var csStyle = window.getComputedStyle(container);\n            this.opt = __assign({ container: container, style: CurveStyle.ios, ratio: window.devicePixelRatio || 1, speed: 0.2, amplitude: 1, frequency: 6, color: \"#fff\", cover: false, width: parseInt(csStyle.width.replace(\"px\", \"\"), 10), height: parseInt(csStyle.height.replace(\"px\", \"\"), 10), autostart: true, pixelDepth: 0.02, lerpSpeed: 0.1 }, rest);\n            /**\n             * Actual speed of the animation. Is not safe to change this value directly, use `setSpeed` instead.\n             */\n            this.speed = Number(this.opt.speed);\n            /**\n             * Actual amplitude of the animation. Is not safe to change this value directly, use `setAmplitude` instead.\n             */\n            this.amplitude = Number(this.opt.amplitude);\n            /**\n             * Width of the canvas multiplied by pixel ratio\n             */\n            this.width = Number(this.opt.ratio * this.opt.width);\n            /**\n             * Height of the canvas multiplied by pixel ratio\n             */\n            this.height = Number(this.opt.ratio * this.opt.height);\n            /**\n             * Maximum height for a single wave\n             */\n            this.heightMax = Number(this.height / 2) - 6;\n            /**\n             * Color of the wave (used in Classic iOS)\n             */\n            this.color = \"rgb(\" + this.hex2rgb(this.opt.color) + \")\";\n            /**\n             * An object containing controller variables that need to be interpolated\n             * to an another value before to be actually changed\n             */\n            this.interpolation = {\n                speed: this.speed,\n                amplitude: this.amplitude,\n            };\n            /**\n             * Canvas DOM Element where curves will be drawn\n             */\n            this.canvas = document.createElement(\"canvas\");\n            /**\n             * 2D Context from Canvas\n             */\n            this.ctx = this.canvas.getContext(\"2d\");\n            // Set dimensions\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            // By covering, we ensure the canvas is in the same size of the parent\n            if (this.opt.cover === true) {\n                this.canvas.style.width = this.canvas.style.height = \"100%\";\n            }\n            else {\n                this.canvas.style.width = this.width / this.opt.ratio + \"px\";\n                this.canvas.style.height = this.height / this.opt.ratio + \"px\";\n            }\n            // Instantiate all curves based on the style\n            switch (this.opt.style) {\n                case CurveStyle.ios9:\n                    this.curves = (this.opt.curveDefinition || iOS9Curve.getDefinition()).map(function (def) { return new iOS9Curve(_this, def); });\n                    break;\n                case CurveStyle.ios:\n                default:\n                    this.curves = (this.opt.curveDefinition || Curve.getDefinition()).map(function (def) { return new Curve(_this, def); });\n                    break;\n            }\n            // Attach to the container\n            this.opt.container.appendChild(this.canvas);\n            // Start the animation\n            if (this.opt.autostart) {\n                this.start();\n            }\n        }\n        /**\n         * Convert an HEX color to RGB\n         */\n        SiriWave.prototype.hex2rgb = function (hex) {\n            var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n            hex = hex.replace(shorthandRegex, function (m, r, g, b) { return r + r + g + g + b + b; });\n            var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n            return result\n                ? parseInt(result[1], 16).toString() + \",\" + parseInt(result[2], 16).toString() + \",\" + parseInt(result[3], 16).toString()\n                : null;\n        };\n        SiriWave.prototype.intLerp = function (v0, v1, t) {\n            return v0 * (1 - t) + v1 * t;\n        };\n        /**\n         * Interpolate a property to the value found in this.interpolation\n         */\n        SiriWave.prototype.lerp = function (propertyStr) {\n            this[propertyStr] = this.intLerp(this[propertyStr], this.interpolation[propertyStr], this.opt.lerpSpeed);\n            if (this[propertyStr] - this.interpolation[propertyStr] === 0) {\n                this.interpolation[propertyStr] = null;\n            }\n            return this[propertyStr];\n        };\n        /**\n         * Clear the canvas\n         */\n        SiriWave.prototype._clear = function () {\n            this.ctx.globalCompositeOperation = \"destination-out\";\n            this.ctx.fillRect(0, 0, this.width, this.height);\n            this.ctx.globalCompositeOperation = \"source-over\";\n        };\n        /**\n         * Draw all curves\n         */\n        SiriWave.prototype._draw = function () {\n            this.curves.forEach(function (curve) { return curve.draw(); });\n        };\n        /**\n         * Clear the space, interpolate values, calculate new steps and draws\n         * @returns\n         */\n        SiriWave.prototype.startDrawCycle = function () {\n            this._clear();\n            // Interpolate values\n            if (this.interpolation.amplitude !== null)\n                this.lerp(\"amplitude\");\n            if (this.interpolation.speed !== null)\n                this.lerp(\"speed\");\n            this._draw();\n            this.phase = (this.phase + (Math.PI / 2) * this.speed) % (2 * Math.PI);\n            if (window.requestAnimationFrame) {\n                this.animationFrameId = window.requestAnimationFrame(this.startDrawCycle.bind(this));\n            }\n            else {\n                this.timeoutId = setTimeout(this.startDrawCycle.bind(this), 20);\n            }\n        };\n        /* API */\n        /**\n         * Start the animation\n         */\n        SiriWave.prototype.start = function () {\n            this.phase = 0;\n            // Ensure we don't re-launch the draw cycle\n            if (!this.run) {\n                this.run = true;\n                this.startDrawCycle();\n            }\n        };\n        /**\n         * Stop the animation\n         */\n        SiriWave.prototype.stop = function () {\n            this.phase = 0;\n            this.run = false;\n            // Clear old draw cycle on stop\n            this.animationFrameId && window.cancelAnimationFrame(this.animationFrameId);\n            this.timeoutId && clearTimeout(this.timeoutId);\n        };\n        /**\n         * Set a new value for a property (interpolated)\n         */\n        SiriWave.prototype.set = function (propertyStr, value) {\n            this.interpolation[propertyStr] = value;\n        };\n        /**\n         * Set a new value for the speed property (interpolated)\n         */\n        SiriWave.prototype.setSpeed = function (value) {\n            this.set(\"speed\", value);\n        };\n        /**\n         * Set a new value for the amplitude property (interpolated)\n         */\n        SiriWave.prototype.setAmplitude = function (value) {\n            this.set(\"amplitude\", value);\n        };\n        return SiriWave;\n    }());\n\n    return SiriWave;\n\n})));\n"]},"metadata":{},"sourceType":"script"}