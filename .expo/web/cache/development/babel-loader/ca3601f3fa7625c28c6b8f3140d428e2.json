{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/nakasoneryouta/Desktop/sample_reactnative/src/components/template/ColorSliderView/ColorSliderView.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SaveColorPalette from \"../../atoms/SaveColorPalette/SaveColorPalette\";\nimport { HueSlider, SaturationSlider, LightnessSlider } from 'react-native-color';\nimport tinycolor from 'tinycolor2';\n\nvar component = function component(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _React$useState = React.useState(\"top\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      parts = _React$useState2[0],\n      setParts = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    color: tinycolor('#70c1b3').toHsl()\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    color: tinycolor('#70c1b3').toHsl()\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      state2 = _React$useState6[0],\n      setState2 = _React$useState6[1];\n\n  var _updateHue = function _updateHue(h) {\n    if (parts == 'top') {\n      return setState({\n        color: _objectSpread(_objectSpread({}, state.color), {}, {\n          h: h\n        })\n      });\n    } else {\n      return setState2({\n        color: _objectSpread(_objectSpread({}, state2.color), {}, {\n          h: h\n        })\n      });\n    }\n  };\n\n  var _updateSaturation = function _updateSaturation(s) {\n    if (parts == 'top') {\n      return setState({\n        color: _objectSpread(_objectSpread({}, state.color), {}, {\n          s: s\n        })\n      });\n    } else {\n      return setState2({\n        color: _objectSpread(_objectSpread({}, state2.color), {}, {\n          s: s\n        })\n      });\n    }\n  };\n\n  var _updateLightness = function _updateLightness(l) {\n    if (parts == 'top') {\n      return setState({\n        color: _objectSpread(_objectSpread({}, state.color), {}, {\n          l: l\n        })\n      });\n    } else {\n      return setState2({\n        color: _objectSpread(_objectSpread({}, state2.color), {}, {\n          l: l\n        })\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.editContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.circleBigContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.boxContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setParts(\"top\");\n    },\n    style: [styles.box, {\n      backgroundColor: tinycolor(state.color).toHslString()\n    }, parts == \"top\" ? styles.selectbox : {}],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setParts(\"bottom\");\n    },\n    style: [styles.box2, {\n      backgroundColor: tinycolor(state2.color).toHslString()\n    }, parts == \"bottom\" ? styles.selectbox : {}],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }\n  })), React.createElement(View, {\n    style: styles.circleTitleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: [styles.circleTitle, parts == 'top' ? styles.activeTitleColor : styles.normalTitleColor],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 41\n    }\n  }, \"\\u80CC\\u666F\\u8272\"), React.createElement(Text, {\n    style: styles.circleTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, \" / \"), React.createElement(Text, {\n    style: [styles.circleTitle, parts == 'bottom' ? styles.activeTitleColor : styles.normalTitleColor],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }, \"\\u30D5\\u30A9\\u30F3\\u30C8\"))), React.createElement(View, {\n    style: styles.colorPaletteContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.slderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.componentText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 41\n    }\n  }, '色相'), React.createElement(HueSlider, {\n    style: styles.sliderRow,\n    gradientSteps: 40,\n    value: parts == 'top' ? state.color.h : state2.color.h,\n    onValueChange: _updateHue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }\n  })), React.createElement(View, {\n    style: styles.slderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.componentText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, '透度'), React.createElement(SaturationSlider, {\n    style: styles.sliderRow,\n    gradientSteps: 20,\n    value: parts == 'top' ? state.color.s : state2.color.s,\n    color: parts == 'top' ? state.color : state2.color,\n    onValueChange: _updateSaturation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }\n  })), React.createElement(View, {\n    style: styles.slderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.componentText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 41\n    }\n  }, '明度'), React.createElement(LightnessSlider, {\n    style: styles.sliderRow,\n    gradientSteps: 20,\n    value: parts == 'top' ? state.color.l : state2.color.l,\n    color: parts == 'top' ? state.color : state2.color,\n    onValueChange: _updateLightness,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 41\n    }\n  })))), React.createElement(View, {\n    style: styles.colorEreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, React.createElement(SaveColorPalette, {\n    saveColors: function saveColors(colors) {\n      setState({\n        color: tinycolor(colors.color1).toHsl()\n      }), setState2({\n        color: tinycolor(colors.color2).toHsl()\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  })));\n};\n\nvar BigCircle = 50;\nvar HEIGHT = Dimensions.get('window').height;\nvar WIDTH = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100%',\n    paddingVertical: HEIGHT / 40\n  },\n  editContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    height: '100%'\n  },\n  circleTitle: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 15,\n    marginTop: 15\n  },\n  normalTitleColor: {\n    color: '#9FA2A9',\n    fontSize: 10\n  },\n  activeTitleColor: {\n    color: 'white'\n  },\n  circleTitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-end'\n  },\n  circleBigContainer: {\n    alignItems: 'center',\n    marginHorizontal: HEIGHT / 40\n  },\n  boxContainer: {\n    flexDirection: 'row',\n    transform: [{\n      rotate: \"90deg\"\n    }]\n  },\n  selectbox: {\n    borderColor: 'white',\n    borderWidth: 3\n  },\n  box: {\n    width: BigCircle,\n    height: BigCircle * 2,\n    overflow: 'hidden',\n    borderTopLeftRadius: BigCircle * 1.5,\n    borderBottomLeftRadius: BigCircle * 1.5\n  },\n  box2: {\n    width: BigCircle,\n    height: BigCircle * 2,\n    overflow: 'hidden',\n    borderTopRightRadius: BigCircle * 1.5,\n    borderBottomRightRadius: BigCircle * 1.5\n  },\n  colorPaletteContainer: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    width: '53%',\n    paddingRight: WIDTH / 20\n  },\n  colorEreaContainer: {\n    marginVertical: HEIGHT / 50,\n    flex: 1,\n    flexDirection: 'row',\n    width: '100%'\n  },\n  slderContainer: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  componentText: _objectSpread({\n    marginTop: 16,\n    color: 'white',\n    fontSize: 16,\n    lineHeight: 21\n  }, Platform.select({\n    android: {\n      fontFamily: 'sans-serif-medium'\n    },\n    ios: {\n      fontWeight: '600',\n      letterSpacing: -0.408\n    }\n  })),\n  sliderRow: {\n    alignSelf: 'stretch',\n    marginLeft: 12,\n    marginTop: 12,\n    width: '100%'\n  }\n});\nexport default React.memo(component);","map":{"version":3,"sources":["/Users/nakasoneryouta/Desktop/sample_reactnative/src/components/template/ColorSliderView/ColorSliderView.tsx"],"names":["React","SaveColorPalette","HueSlider","SaturationSlider","LightnessSlider","tinycolor","component","useState","parts","setParts","color","toHsl","state","setState","state2","setState2","_updateHue","h","_updateSaturation","s","_updateLightness","l","styles","container","editContainer","circleBigContainer","boxContainer","box","backgroundColor","toHslString","selectbox","box2","circleTitleContainer","circleTitle","activeTitleColor","normalTitleColor","colorPaletteContainer","slderContainer","componentText","sliderRow","colorEreaContainer","colors","color1","color2","BigCircle","HEIGHT","Dimensions","get","height","WIDTH","width","StyleSheet","create","flex","paddingVertical","flexDirection","fontWeight","fontSize","marginTop","alignItems","marginHorizontal","transform","rotate","borderColor","borderWidth","overflow","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","display","paddingRight","marginVertical","lineHeight","Platform","select","android","fontFamily","ios","letterSpacing","alignSelf","marginLeft","memo"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,gBAAP;AACA,SAAQC,SAAR,EAAkBC,gBAAlB,EAAmCC,eAAnC,QAAyD,oBAAzD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAQA,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,OAAQ;AAAA;;AAAA,wBAERN,KAAK,CAACO,QAAN,CAAsB,KAAtB,CAFQ;AAAA;AAAA,MAE5BC,KAF4B;AAAA,MAEpBC,QAFoB;;AAAA,yBAIPT,KAAK,CAACO,QAAN,CAAe;AAACG,IAAAA,KAAK,EAAEL,SAAS,CAAC,SAAD,CAAT,CAAqBM,KAArB;AAAR,GAAf,CAJO;AAAA;AAAA,MAI3BC,KAJ2B;AAAA,MAInBC,QAJmB;;AAAA,yBAKLb,KAAK,CAACO,QAAN,CAAe;AAACG,IAAAA,KAAK,EAAEL,SAAS,CAAC,SAAD,CAAT,CAAqBM,KAArB;AAAR,GAAf,CALK;AAAA;AAAA,MAK3BG,MAL2B;AAAA,MAKlBC,SALkB;;AAOnC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAc;AACzB,QAAGT,KAAK,IAAI,KAAZ,EAAkB;AACV,aAAOK,QAAQ,CAAC;AAAEH,QAAAA,KAAK,kCAAOE,KAAK,CAACF,KAAb;AAAoBO,UAAAA,CAAC,EAADA;AAApB;AAAP,OAAD,CAAf;AACP,KAFD,MAEK;AACG,aAAOF,SAAS,CAAC;AAAEL,QAAAA,KAAK,kCAAOI,MAAM,CAACJ,KAAd;AAAqBO,UAAAA,CAAC,EAADA;AAArB;AAAP,OAAD,CAAhB;AACP;AACR,GAND;;AAOA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAc;AAChC,QAAGX,KAAK,IAAI,KAAZ,EAAkB;AACV,aAAOK,QAAQ,CAAC;AAAEH,QAAAA,KAAK,kCAAOE,KAAK,CAACF,KAAb;AAAoBS,UAAAA,CAAC,EAADA;AAApB;AAAP,OAAD,CAAf;AACP,KAFD,MAEK;AACG,aAAOJ,SAAS,CAAC;AAAEL,QAAAA,KAAK,kCAAOI,MAAM,CAACJ,KAAd;AAAqBS,UAAAA,CAAC,EAADA;AAArB;AAAP,OAAD,CAAhB;AACP;AACR,GAND;;AAOA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAc;AAC/B,QAAGb,KAAK,IAAI,KAAZ,EAAkB;AACV,aAAOK,QAAQ,CAAC;AAAEH,QAAAA,KAAK,kCAAOE,KAAK,CAACF,KAAb;AAAoBW,UAAAA,CAAC,EAADA;AAApB;AAAP,OAAD,CAAf;AACP,KAFD,MAEK;AACG,aAAON,SAAS,CAAC;AAAEL,QAAAA,KAAK,kCAAOI,MAAM,CAACJ,KAAd;AAAqBW,UAAAA,CAAC,EAADA;AAArB;AAAP,OAAD,CAAhB;AACP;AACR,GAND;;AAQP,SACO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAID,MAAM,CAACE,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIF,MAAM,CAACG,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIH,MAAM,CAACI,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAI;AAAA,aAAMjB,QAAQ,CAAC,KAAD,CAAd;AAAA,KAA7B;AAAoD,IAAA,KAAK,EAAE,CAACa,MAAM,CAACK,GAAR,EAAY;AAACC,MAAAA,eAAe,EAACvB,SAAS,CAACO,KAAK,CAACF,KAAP,CAAT,CAAuBmB,WAAvB;AAAjB,KAAZ,EAAmErB,KAAK,IAAI,KAAT,GAAiBc,MAAM,CAACQ,SAAxB,GAAoC,EAAvG,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAEQ,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAI;AAAA,aAAMrB,QAAQ,CAAC,QAAD,CAAd;AAAA,KAA7B;AAAuD,IAAA,KAAK,EAAE,CAACa,MAAM,CAACS,IAAR,EAAa;AAACH,MAAAA,eAAe,EAACvB,SAAS,CAACS,MAAM,CAACJ,KAAR,CAAT,CAAwBmB,WAAxB;AAAjB,KAAb,EAAsErB,KAAK,IAAI,QAAT,GAAoBc,MAAM,CAACQ,SAA3B,GAAsC,EAA5G,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CADR,EAMQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIR,MAAM,CAACU,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACV,MAAM,CAACW,WAAR,EAAqBzB,KAAK,IAAI,KAAT,GAAiBc,MAAM,CAACY,gBAAxB,GAA2CZ,MAAM,CAACa,gBAAvE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADR,EAEQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIb,MAAM,CAACW,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFR,EAGQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI,CAACX,MAAM,CAACW,WAAR,EAAqBzB,KAAK,IAAI,QAAT,GAAoBc,MAAM,CAACY,gBAA3B,GAA8CZ,MAAM,CAACa,gBAA1E,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHR,CANR,CADR,EAcQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIb,MAAM,CAACc,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAId,MAAM,CAACe,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC,IAApC,CADR,EAEQ,oBAAC,SAAD;AACA,IAAA,KAAK,EAAEhB,MAAM,CAACiB,SADd;AAEA,IAAA,aAAa,EAAE,EAFf;AAGA,IAAA,KAAK,EAAE/B,KAAK,IAAI,KAAT,GAAiBI,KAAK,CAACF,KAAN,CAAYO,CAA7B,GAAiCH,MAAM,CAACJ,KAAP,CAAaO,CAHrD;AAIA,IAAA,aAAa,EAAED,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CADR,EAUQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIM,MAAM,CAACe,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC,IAApC,CADA,EAEQ,oBAAC,gBAAD;AACA,IAAA,KAAK,EAAEhB,MAAM,CAACiB,SADd;AAEA,IAAA,aAAa,EAAE,EAFf;AAGA,IAAA,KAAK,EAAE/B,KAAK,IAAI,KAAT,GAAiBI,KAAK,CAACF,KAAN,CAAYS,CAA7B,GAAiCL,MAAM,CAACJ,KAAP,CAAaS,CAHrD;AAIA,IAAA,KAAK,EAAEX,KAAK,IAAI,KAAT,GAAiBI,KAAK,CAACF,KAAvB,GAA+BI,MAAM,CAACJ,KAJ7C;AAKA,IAAA,aAAa,EAAEQ,iBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CAVR,EAoBQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAII,MAAM,CAACe,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC,IAApC,CADR,EAEQ,oBAAC,eAAD;AACA,IAAA,KAAK,EAAEhB,MAAM,CAACiB,SADd;AAEA,IAAA,aAAa,EAAE,EAFf;AAGA,IAAA,KAAK,EAAE/B,KAAK,IAAI,KAAT,GAAiBI,KAAK,CAACF,KAAN,CAAYW,CAA7B,GAAiCP,MAAM,CAACJ,KAAP,CAAaW,CAHrD;AAIA,IAAA,KAAK,EAAEb,KAAK,IAAI,KAAT,GAAiBI,KAAK,CAACF,KAAvB,GAA+BI,MAAM,CAACJ,KAJ7C;AAKA,IAAA,aAAa,EAAEU,gBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CApBR,CAdR,CADR,EAgDQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIE,MAAM,CAACkB,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACb,oBAAC,gBAAD;AAAkB,IAAA,UAAU,EAAI,oBAACC,MAAD,EAAY;AAAC5B,MAAAA,QAAQ,CAAC;AAACH,QAAAA,KAAK,EAAEL,SAAS,CAACoC,MAAM,CAACC,MAAR,CAAT,CAAyB/B,KAAzB;AAAR,OAAD,CAAR,EAAoDI,SAAS,CAAC;AAACL,QAAAA,KAAK,EAAEL,SAAS,CAACoC,MAAM,CAACE,MAAR,CAAT,CAAyBhC,KAAzB;AAAR,OAAD,CAA7D;AAAyG,KAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,CAhDR,CADP;AAuDA,CApFD;;AAsFA,IAAMiC,SAAS,GAAG,EAAlB;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAxC;AACA,IAAMC,KAAK,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,KAAvC;AAEA,IAAM5B,MAAM,GAAG6B,UAAU,CAACC,MAAX,CAAkB;AAChC7B,EAAAA,SAAS,EAAC;AACT8B,IAAAA,IAAI,EAAE,CADG;AAEKL,IAAAA,MAAM,EAAE,MAFb;AAGKM,IAAAA,eAAe,EAAET,MAAM,GAAG;AAH/B,GADsB;AAMzBrB,EAAAA,aAAa,EAAE;AACP6B,IAAAA,IAAI,EAAE,CADC;AAErBE,IAAAA,aAAa,EAAE,KAFM;AAGrBP,IAAAA,MAAM,EAAE;AAHa,GANU;AAWhCf,EAAAA,WAAW,EAAC;AACGvB,IAAAA,KAAK,EAAE,OADV;AAEX8C,IAAAA,UAAU,EAAE,KAFD;AAGXC,IAAAA,QAAQ,EAAE,EAHC;AAIXC,IAAAA,SAAS,EAAE;AAJA,GAXoB;AAiBzBvB,EAAAA,gBAAgB,EAAE;AACVzB,IAAAA,KAAK,EAAE,SADG;AAEV+C,IAAAA,QAAQ,EAAE;AAFA,GAjBO;AAqBzBvB,EAAAA,gBAAgB,EAAC;AACTxB,IAAAA,KAAK,EAAE;AADE,GArBQ;AAwBzBsB,EAAAA,oBAAoB,EAAC;AACbuB,IAAAA,aAAa,EAAE,KADF;AAEbI,IAAAA,UAAU,EAAE;AAFC,GAxBI;AA4BhClC,EAAAA,kBAAkB,EAAC;AAClBkC,IAAAA,UAAU,EAAE,QADM;AAElBC,IAAAA,gBAAgB,EAAEf,MAAM,GAAG;AAFT,GA5Ba;AAgChCnB,EAAAA,YAAY,EAAC;AACZ6B,IAAAA,aAAa,EAAE,KADH;AAEZM,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAD;AAFC,GAhCmB;AAoChChC,EAAAA,SAAS,EAAE;AACViC,IAAAA,WAAW,EAAE,OADH;AAEVC,IAAAA,WAAW,EAAE;AAFH,GApCqB;AAwChCrC,EAAAA,GAAG,EAAE;AACJuB,IAAAA,KAAK,EAAEN,SADH;AAEJI,IAAAA,MAAM,EAAEJ,SAAS,GAAG,CAFhB;AAGJqB,IAAAA,QAAQ,EAAE,QAHN;AAIJC,IAAAA,mBAAmB,EAAEtB,SAAS,GAAG,GAJ7B;AAKJuB,IAAAA,sBAAsB,EAAEvB,SAAS,GAAG;AALhC,GAxC2B;AA+ChCb,EAAAA,IAAI,EAAE;AACLmB,IAAAA,KAAK,EAAEN,SADF;AAELI,IAAAA,MAAM,EAAEJ,SAAS,GAAG,CAFf;AAGLqB,IAAAA,QAAQ,EAAE,QAHL;AAILG,IAAAA,oBAAoB,EAAExB,SAAS,GAAG,GAJ7B;AAKLyB,IAAAA,uBAAuB,EAAEzB,SAAS,GAAG;AALhC,GA/C0B;AAsDhCR,EAAAA,qBAAqB,EAAC;AACPuB,IAAAA,UAAU,EAAE,YADL;AAEPW,IAAAA,OAAO,EAAE,MAFF;AAGPpB,IAAAA,KAAK,EAAE,KAHA;AAIPqB,IAAAA,YAAY,EAAEtB,KAAK,GAAG;AAJf,GAtDU;AA4DhCT,EAAAA,kBAAkB,EAAC;AACJgC,IAAAA,cAAc,EAAE3B,MAAM,GAAG,EADrB;AAEJQ,IAAAA,IAAI,EAAE,CAFF;AAGlBE,IAAAA,aAAa,EAAE,KAHG;AAIlBL,IAAAA,KAAK,EAAE;AAJW,GA5Da;AAkEzBb,EAAAA,cAAc,EAAC;AACPiC,IAAAA,OAAO,EAAE,MADF;AAEPf,IAAAA,aAAa,EAAE;AAFR,GAlEU;AAsEzBjB,EAAAA,aAAa;AACLoB,IAAAA,SAAS,EAAE,EADN;AAELhD,IAAAA,KAAK,EAAE,OAFF;AAGL+C,IAAAA,QAAQ,EAAE,EAHL;AAILgB,IAAAA,UAAU,EAAE;AAJP,KAKFC,QAAQ,CAACC,MAAT,CAAgB;AACXC,IAAAA,OAAO,EAAE;AACTC,MAAAA,UAAU,EAAE;AADH,KADE;AAIXC,IAAAA,GAAG,EAAE;AACLtB,MAAAA,UAAU,EAAE,KADP;AAELuB,MAAAA,aAAa,EAAE,CAAC;AAFX;AAJM,GAAhB,CALE,CAtEY;AAqFzBxC,EAAAA,SAAS,EAAE;AACHyC,IAAAA,SAAS,EAAE,SADR;AAEHC,IAAAA,UAAU,EAAE,EAFT;AAGHvB,IAAAA,SAAS,EAAE,EAHR;AAIHR,IAAAA,KAAK,EAAE;AAJJ;AArFc,CAAlB,CAAf;AA6FA,eAAelD,KAAK,CAACkF,IAAN,CAAW5E,SAAX,CAAf","sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity, Text ,StyleSheet, Slider, Platform, Dimensions} from 'react-native';\nimport SaveColorPalette from '../../atoms/SaveColorPalette/SaveColorPalette';\nimport {HueSlider,SaturationSlider,LightnessSlider} from 'react-native-color';\nimport tinycolor from 'tinycolor2';\nimport Colorpalette from '../../atoms/Colorpalette/Colorpalette';\n\ntype Props = {\n}\n\ntype Parts = \"top\" | \"bottom\"\n\nconst component: React.FC<Props> = ({}) => {\n\n        const [parts , setParts] = React.useState<Parts>(\"top\")\n\n        const [ state , setState] = React.useState({color: tinycolor('#70c1b3').toHsl()})\n        const [ state2 , setState2] = React.useState({color: tinycolor('#70c1b3').toHsl()})\n\n        const _updateHue = (h:string) => {\n                if(parts == 'top'){\n                        return setState({ color: { ...state.color, h } });\n                }else{\n                        return setState2({ color: { ...state2.color, h } });\n                }\n        }\n        const _updateSaturation = (s:string) => {\n                if(parts == 'top'){\n                        return setState({ color: { ...state.color, s } });\n                }else{\n                        return setState2({ color: { ...state2.color, s } });\n                }\n        }\n        const _updateLightness = (l:string) => {\n                if(parts == 'top'){\n                        return setState({ color: { ...state.color, l } });\n                }else{\n                        return setState2({ color: { ...state2.color, l } });\n                }\n        }\n\n\treturn (\n        <View style = {styles.container}>\n                <View style = {styles.editContainer}>\n                        <View style = {styles.circleBigContainer}>\n                                <View style = {styles.boxContainer}>\n                                        <TouchableOpacity onPress = {() => setParts(\"top\")} style={[styles.box,{backgroundColor:tinycolor(state.color).toHslString()},parts == \"top\" ? styles.selectbox : {}]}></TouchableOpacity>\n                                        <TouchableOpacity onPress = {() => setParts(\"bottom\")} style={[styles.box2,{backgroundColor:tinycolor(state2.color).toHslString()}, parts == \"bottom\" ? styles.selectbox: {}]}></TouchableOpacity>\n                                </View>\n\n                                <View style = {styles.circleTitleContainer}>\n                                        <Text style = {[styles.circleTitle, parts == 'top' ? styles.activeTitleColor : styles.normalTitleColor]}>背景色</Text>\n                                        <Text style = {styles.circleTitle}> / </Text>\n                                        <Text style = {[styles.circleTitle, parts == 'bottom' ? styles.activeTitleColor : styles.normalTitleColor]}>フォント</Text>\n                                </View>\n                        </View>\n\n                        <View style = {styles.colorPaletteContainer}>\n                                <View style = {styles.slderContainer}>\n                                        <Text style={styles.componentText}>{'色相'}</Text>\n                                        <HueSlider\n                                        style={styles.sliderRow}\n                                        gradientSteps={40}\n                                        value={parts == 'top' ? state.color.h : state2.color.h}\n                                        onValueChange={_updateHue}\n                                        />\n                                </View>\n                                <View style = {styles.slderContainer}>\n                                <Text style={styles.componentText}>{'透度'}</Text>\n                                        <SaturationSlider\n                                        style={styles.sliderRow}\n                                        gradientSteps={20}\n                                        value={parts == 'top' ? state.color.s : state2.color.s}\n                                        color={parts == 'top' ? state.color : state2.color}\n                                        onValueChange={_updateSaturation}\n                                        />\n                                </View>\n                                <View style = {styles.slderContainer}>\n                                        <Text style={styles.componentText}>{'明度'}</Text>\n                                        <LightnessSlider\n                                        style={styles.sliderRow}\n                                        gradientSteps={20}\n                                        value={parts == 'top' ? state.color.l : state2.color.l}\n                                        color={parts == 'top' ? state.color : state2.color}\n                                        onValueChange={_updateLightness}\n                                        />\n                                </View>\n                        </View>\n                </View>\n\n                <View style = {styles.colorEreaContainer}>\n\t\t\t<SaveColorPalette saveColors = {(colors) => {setState({color: tinycolor(colors.color1).toHsl()}),setState2({color: tinycolor(colors.color2).toHsl()})}}/>\n                </View>\n        </View>\n\t)\n\n}\n\nconst BigCircle = 50\n\nconst HEIGHT = Dimensions.get('window').height\nconst WIDTH = Dimensions.get('window').width\n\nconst styles = StyleSheet.create({\n\tcontainer:{\n\t\tflex: 1,\n                height: '100%',\n                paddingVertical: HEIGHT / 40,\n        },\n        editContainer: {\n                flex: 1,\n\t\tflexDirection: 'row',\n\t\theight: '100%',\n        },\n\tcircleTitle:{\n                color: 'white',\n\t\tfontWeight: '600',\n\t\tfontSize: 15,\n\t\tmarginTop: 15,\n        },\n        normalTitleColor: {\n                color: '#9FA2A9',\n                fontSize: 10,\n        },\n        activeTitleColor:{\n                color: 'white'\n        },\n        circleTitleContainer:{\n                flexDirection: 'row',\n                alignItems: 'flex-end',\n        },\n\tcircleBigContainer:{\n\t\talignItems: 'center',\n\t\tmarginHorizontal: HEIGHT / 40,\n\t},\n\tboxContainer:{\n\t\tflexDirection: 'row',\n\t\ttransform: [{ rotate: \"90deg\" }]\n\t},\n\tselectbox: {\n\t\tborderColor: 'white',\n\t\tborderWidth: 3,\n\t},\n\tbox: {\n\t\twidth: BigCircle,\n\t\theight: BigCircle * 2,\n\t\toverflow: 'hidden',\n\t\tborderTopLeftRadius: BigCircle * 1.5,\n\t\tborderBottomLeftRadius: BigCircle * 1.5,\n\t},\n\tbox2: {\n\t\twidth: BigCircle,\n\t\theight: BigCircle * 2,\n\t\toverflow: 'hidden',\n\t\tborderTopRightRadius: BigCircle * 1.5,\n\t\tborderBottomRightRadius: BigCircle * 1.5,\n\t},\n\tcolorPaletteContainer:{\n                alignItems: 'flex-start',\n                display: 'flex',\n                width: '53%',\n                paddingRight: WIDTH / 20\n\t},\n\tcolorEreaContainer:{\n                marginVertical: HEIGHT / 50,\n                flex: 1,\n\t\tflexDirection: 'row',\n\t\twidth: '100%'\n        },\n        slderContainer:{\n                display: 'flex',\n                flexDirection: 'row',\n        },\n        componentText: {\n                marginTop: 16,\n                color: 'white',\n                fontSize: 16,\n                lineHeight: 21,\n                ...Platform.select({\n                        android: {\n                        fontFamily: 'sans-serif-medium'\n                        },\n                        ios: {\n                        fontWeight: '600',\n                        letterSpacing: -0.408\n                        }\n                })\n        },\n        sliderRow: {\n                alignSelf: 'stretch',\n                marginLeft: 12,\n                marginTop: 12,\n                width: '100%'\n        },\n      });\n\nexport default React.memo(component);"]},"metadata":{},"sourceType":"module"}