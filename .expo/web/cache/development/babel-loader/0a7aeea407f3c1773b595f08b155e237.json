{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/nakasoneryouta/Desktop/sample_reactnative/src/components/atoms/ExpandCard/ExpandCard.tsx\";\nimport React from 'react';\nimport styles from \"./styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar component = function component(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var WIDTH = Dimensions.get('window').width;\n  var HEIGHT = Dimensions.get('window').height;\n  var WidthAnim = React.useRef(new Animated.Value(WIDTH - 100)).current;\n  var HeightAnim = React.useRef(new Animated.Value(WIDTH - 100)).current;\n  var moveTop = React.useRef(new Animated.Value(0)).current;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      disabled = _React$useState2[0],\n      setDisabled = _React$useState2[1];\n\n  var expand = function expand() {\n    Animated.sequence([Animated.timing(moveTop, {\n      toValue: -345,\n      duration: 500,\n      useNativeDriver: false\n    }), Animated.timing(WidthAnim, {\n      toValue: WIDTH,\n      duration: 500,\n      useNativeDriver: false\n    }), Animated.timing(HeightAnim, {\n      toValue: HEIGHT,\n      duration: 500,\n      useNativeDriver: false\n    })]).start(function (event) {\n      if (event.finished) {\n        expand();\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      alignItems: 'center'\n    },\n    onLayout: function onLayout(ref) {\n      console.log(\"要素の中身は\", ref.nativeEvent.layout.y);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      expand(), setDisabled(true);\n    },\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.cardContainer, {\n      width: WidthAnim,\n      height: HeightAnim,\n      top: moveTop\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport default React.memo(component);","map":{"version":3,"sources":["/Users/nakasoneryouta/Desktop/sample_reactnative/src/components/atoms/ExpandCard/ExpandCard.tsx"],"names":["React","styles","component","WIDTH","Dimensions","get","width","HEIGHT","height","WidthAnim","useRef","Animated","Value","current","HeightAnim","moveTop","useState","disabled","setDisabled","expand","sequence","timing","toValue","duration","useNativeDriver","start","event","finished","alignItems","ref","console","log","nativeEvent","layout","y","cardContainer","top","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;;;;;;AAKA,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,OAAQ;AAAA;;AAEnC,MAAMC,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAvC;AACA,MAAMC,MAAM,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAAxC;AAEA,MAAMC,SAAS,GAAGT,KAAK,CAACU,MAAN,CAAa,IAAIC,QAAQ,CAACC,KAAb,CAAmBT,KAAK,GAAG,GAA3B,CAAb,EAA8CU,OAAhE;AACA,MAAMC,UAAU,GAAGd,KAAK,CAACU,MAAN,CAAa,IAAIC,QAAQ,CAACC,KAAb,CAAmBT,KAAK,GAAG,GAA3B,CAAb,EAA8CU,OAAjE;AACA,MAAME,OAAO,GAAGf,KAAK,CAACU,MAAN,CAAa,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAb,EAAoCC,OAApD;;AAPmC,wBASHb,KAAK,CAACgB,QAAN,CAAe,KAAf,CATG;AAAA;AAAA,MAS5BC,QAT4B;AAAA,MASlBC,WATkB;;AAanC,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAcrBR,IAAAA,QAAQ,CAACS,QAAT,CAAkB,CAEVT,QAAQ,CAACU,MAAT,CAAgBN,OAAhB,EAAyB;AACvBO,MAAAA,OAAO,EAAE,CAAC,GADa;AAEvBC,MAAAA,QAAQ,EAAE,GAFa;AAGzBC,MAAAA,eAAe,EAAG;AAHO,KAAzB,CAFU,EAQVb,QAAQ,CAACU,MAAT,CAAgBZ,SAAhB,EAA2B;AACnBa,MAAAA,OAAO,EAAEnB,KADU;AAEnBoB,MAAAA,QAAQ,EAAE,GAFS;AAGnBC,MAAAA,eAAe,EAAG;AAHC,KAA3B,CARU,EAaVb,QAAQ,CAACU,MAAT,CAAgBP,UAAhB,EAA4B;AACpBQ,MAAAA,OAAO,EAAEf,MADW;AAEpBgB,MAAAA,QAAQ,EAAE,GAFU;AAGpBC,MAAAA,eAAe,EAAG;AAHE,KAA5B,CAbU,CAAlB,EAkBSC,KAlBT,CAkBe,UAACC,KAAD,EAAW;AAClB,UAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBR,QAAAA,MAAM;AACP;AACF,KAtBP;AAuBC,GArCD;;AAuCP,SACO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACb,MAAAA,KAAK,EAAE,MAAR;AAAesB,MAAAA,UAAU,EAAE;AAA3B,KAAb;AAAmD,IAAA,QAAQ,EAAI,kBAACC,GAAD,EAAQ;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,GAAG,CAACG,WAAJ,CAAgBC,MAAhB,CAAuBC,CAA5C;AAA+C,KAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,mBAAM;AAACf,MAAAA,MAAM,IAAGD,WAAW,CAAC,IAAD,CAApB;AAA2B,KAA7D;AAA+D,IAAA,QAAQ,EAAID,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,KAAK,EAAE,CAAChB,MAAM,CAACkC,aAAR,EAAsB;AAAC7B,MAAAA,KAAK,EAAEG,SAAR;AAAkBD,MAAAA,MAAM,EAAEM,UAA1B;AAAqCsB,MAAAA,GAAG,EAAErB;AAA1C,KAAtB,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADR,CADP;AAWA,CA/DD;;AAiEA,eAAef,KAAK,CAACqC,IAAN,CAAWnC,SAAX,CAAf","sourcesContent":["import React from 'react';\nimport styles from './styles'\nimport { View, TouchableOpacity ,Animated, Text, Dimensions} from 'react-native';\ntype Props = {\n}\n\nconst component: React.FC<Props> = ({}) => {\n\n        const WIDTH = Dimensions.get('window').width\n        const HEIGHT = Dimensions.get('window').height\n\n        const WidthAnim = React.useRef(new Animated.Value(WIDTH - 100)).current;\n        const HeightAnim = React.useRef(new Animated.Value(WIDTH - 100)).current;\n        const moveTop = React.useRef(new Animated.Value(0)).current;\n\n        const [disabled ,setDisabled] = React.useState(false)\n\n\n\n        const expand = () => {\n        // Animated.timing(WidthAnim, {\n        //         toValue: WIDTH,\n        //         duration: 500,\n        //         useNativeDriver : false,\n        // }).start();\n\n        // Animated.timing(HeightAnim, {\n        //         toValue: HEIGHT,\n        //         duration: 500,\n        //         useNativeDriver : false,\n        // }).start();\n\n\n        Animated.sequence([\n                // 矢印がy軸に対してプラス(画面上方向)へ移動\n                Animated.timing(moveTop, {\n                  toValue: -345,\n                  duration: 500,\n                useNativeDriver : false,\n                }),\n\n                Animated.timing(WidthAnim, {\n                        toValue: WIDTH,\n                        duration: 500,\n                        useNativeDriver : false,\n                }),\n                Animated.timing(HeightAnim, {\n                        toValue: HEIGHT,\n                        duration: 500,\n                        useNativeDriver : false,\n                }),\n              ]).start((event) => {\n                if (event.finished) {\n                  expand();\n                }\n              });\n        }\n\n\treturn (\n        <View style={{width: '100%',alignItems: 'center'}} onLayout = {(ref)=> {console.log(\"要素の中身は\",ref.nativeEvent.layout.y)}}>\n                <TouchableOpacity onPress={() => {expand(),setDisabled(true)}} disabled = {disabled}>\n                        <Animated.View\n                            style={[styles.cardContainer,{width: WidthAnim,height: HeightAnim,top: moveTop}]}\n                        >\n                        </Animated.View>\n                </TouchableOpacity>\n        </View>\n\t)\n\n}\n\nexport default React.memo(component);"]},"metadata":{},"sourceType":"module"}